// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ServerResponse.proto

package ZilliqaMessage

import (
	bytes "bytes"
	encoding_binary "encoding/binary"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type DefaultResponse struct {
	Result               *string  `protobuf:"bytes,1,req,name=result,def=hello" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DefaultResponse) Reset()         { *m = DefaultResponse{} }
func (m *DefaultResponse) String() string { return proto.CompactTextString(m) }
func (*DefaultResponse) ProtoMessage()    {}
func (*DefaultResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_80f2a3ea4d9d397d, []int{0}
}
func (m *DefaultResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DefaultResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *DefaultResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DefaultResponse.Merge(m, src)
}
func (m *DefaultResponse) XXX_Size() int {
	return m.Size()
}
func (m *DefaultResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DefaultResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DefaultResponse proto.InternalMessageInfo

const Default_DefaultResponse_Result string = "hello"

func (m *DefaultResponse) GetResult() string {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_DefaultResponse_Result
}

type UIntResponse struct {
	Result               *uint32  `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UIntResponse) Reset()         { *m = UIntResponse{} }
func (m *UIntResponse) String() string { return proto.CompactTextString(m) }
func (*UIntResponse) ProtoMessage()    {}
func (*UIntResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_80f2a3ea4d9d397d, []int{1}
}
func (m *UIntResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UIntResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *UIntResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UIntResponse.Merge(m, src)
}
func (m *UIntResponse) XXX_Size() int {
	return m.Size()
}
func (m *UIntResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UIntResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UIntResponse proto.InternalMessageInfo

func (m *UIntResponse) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

type StringResponse struct {
	Result               *string  `protobuf:"bytes,1,req,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringResponse) Reset()         { *m = StringResponse{} }
func (m *StringResponse) String() string { return proto.CompactTextString(m) }
func (*StringResponse) ProtoMessage()    {}
func (*StringResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_80f2a3ea4d9d397d, []int{2}
}
func (m *StringResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StringResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *StringResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringResponse.Merge(m, src)
}
func (m *StringResponse) XXX_Size() int {
	return m.Size()
}
func (m *StringResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StringResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StringResponse proto.InternalMessageInfo

func (m *StringResponse) GetResult() string {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return ""
}

type DoubleResponse struct {
	Result               *float64 `protobuf:"fixed64,1,req,name=result,def=0" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoubleResponse) Reset()         { *m = DoubleResponse{} }
func (m *DoubleResponse) String() string { return proto.CompactTextString(m) }
func (*DoubleResponse) ProtoMessage()    {}
func (*DoubleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_80f2a3ea4d9d397d, []int{3}
}
func (m *DoubleResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DoubleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *DoubleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubleResponse.Merge(m, src)
}
func (m *DoubleResponse) XXX_Size() int {
	return m.Size()
}
func (m *DoubleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DoubleResponse proto.InternalMessageInfo

const Default_DoubleResponse_Result float64 = 0

func (m *DoubleResponse) GetResult() float64 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_DoubleResponse_Result
}

type UInt64Response struct {
	Result               *uint64  `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UInt64Response) Reset()         { *m = UInt64Response{} }
func (m *UInt64Response) String() string { return proto.CompactTextString(m) }
func (*UInt64Response) ProtoMessage()    {}
func (*UInt64Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_80f2a3ea4d9d397d, []int{4}
}
func (m *UInt64Response) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UInt64Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *UInt64Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UInt64Response.Merge(m, src)
}
func (m *UInt64Response) XXX_Size() int {
	return m.Size()
}
func (m *UInt64Response) XXX_DiscardUnknown() {
	xxx_messageInfo_UInt64Response.DiscardUnknown(m)
}

var xxx_messageInfo_UInt64Response proto.InternalMessageInfo

func (m *UInt64Response) GetResult() uint64 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

type CreateTransactionResponse struct {
	Error                *string  `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Info                 *string  `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
	Tranid               *string  `protobuf:"bytes,3,opt,name=tranid" json:"tranid,omitempty"`
	Contractaddress      *string  `protobuf:"bytes,4,opt,name=contractaddress" json:"contractaddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTransactionResponse) Reset()         { *m = CreateTransactionResponse{} }
func (m *CreateTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTransactionResponse) ProtoMessage()    {}
func (*CreateTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_80f2a3ea4d9d397d, []int{5}
}
func (m *CreateTransactionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *CreateTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTransactionResponse.Merge(m, src)
}
func (m *CreateTransactionResponse) XXX_Size() int {
	return m.Size()
}
func (m *CreateTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTransactionResponse proto.InternalMessageInfo

func (m *CreateTransactionResponse) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *CreateTransactionResponse) GetInfo() string {
	if m != nil && m.Info != nil {
		return *m.Info
	}
	return ""
}

func (m *CreateTransactionResponse) GetTranid() string {
	if m != nil && m.Tranid != nil {
		return *m.Tranid
	}
	return ""
}

func (m *CreateTransactionResponse) GetContractaddress() string {
	if m != nil && m.Contractaddress != nil {
		return *m.Contractaddress
	}
	return ""
}

type GetTransactionResponse struct {
	Error                *string           `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Tx                   *ProtoTransaction `protobuf:"bytes,2,opt,name=tx" json:"tx,omitempty"`
	Receipt              *string           `protobuf:"bytes,3,opt,name=receipt" json:"receipt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetTransactionResponse) Reset()         { *m = GetTransactionResponse{} }
func (m *GetTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*GetTransactionResponse) ProtoMessage()    {}
func (*GetTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_80f2a3ea4d9d397d, []int{6}
}
func (m *GetTransactionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GetTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionResponse.Merge(m, src)
}
func (m *GetTransactionResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionResponse proto.InternalMessageInfo

func (m *GetTransactionResponse) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *GetTransactionResponse) GetTx() *ProtoTransaction {
	if m != nil {
		return m.Tx
	}
	return nil
}

func (m *GetTransactionResponse) GetReceipt() string {
	if m != nil && m.Receipt != nil {
		return *m.Receipt
	}
	return ""
}

type GetDSBlockResponse struct {
	Error                *string       `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Dsblock              *ProtoDSBlock `protobuf:"bytes,2,opt,name=dsblock" json:"dsblock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetDSBlockResponse) Reset()         { *m = GetDSBlockResponse{} }
func (m *GetDSBlockResponse) String() string { return proto.CompactTextString(m) }
func (*GetDSBlockResponse) ProtoMessage()    {}
func (*GetDSBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_80f2a3ea4d9d397d, []int{7}
}
func (m *GetDSBlockResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetDSBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GetDSBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDSBlockResponse.Merge(m, src)
}
func (m *GetDSBlockResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetDSBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDSBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDSBlockResponse proto.InternalMessageInfo

func (m *GetDSBlockResponse) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *GetDSBlockResponse) GetDsblock() *ProtoDSBlock {
	if m != nil {
		return m.Dsblock
	}
	return nil
}

type GetTxBlockResponse struct {
	Error                *string       `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Txblock              *ProtoTxBlock `protobuf:"bytes,2,opt,name=txblock" json:"txblock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetTxBlockResponse) Reset()         { *m = GetTxBlockResponse{} }
func (m *GetTxBlockResponse) String() string { return proto.CompactTextString(m) }
func (*GetTxBlockResponse) ProtoMessage()    {}
func (*GetTxBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_80f2a3ea4d9d397d, []int{8}
}
func (m *GetTxBlockResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetTxBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GetTxBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTxBlockResponse.Merge(m, src)
}
func (m *GetTxBlockResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetTxBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTxBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTxBlockResponse proto.InternalMessageInfo

func (m *GetTxBlockResponse) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *GetTxBlockResponse) GetTxblock() *ProtoTxBlock {
	if m != nil {
		return m.Txblock
	}
	return nil
}

type GetBalanceResponse struct {
	Error                *string  `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Balance              *string  `protobuf:"bytes,2,opt,name=balance" json:"balance,omitempty"`
	Nonce                *string  `protobuf:"bytes,3,opt,name=nonce" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBalanceResponse) Reset()         { *m = GetBalanceResponse{} }
func (m *GetBalanceResponse) String() string { return proto.CompactTextString(m) }
func (*GetBalanceResponse) ProtoMessage()    {}
func (*GetBalanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_80f2a3ea4d9d397d, []int{9}
}
func (m *GetBalanceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetBalanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GetBalanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBalanceResponse.Merge(m, src)
}
func (m *GetBalanceResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetBalanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBalanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBalanceResponse proto.InternalMessageInfo

func (m *GetBalanceResponse) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *GetBalanceResponse) GetBalance() string {
	if m != nil && m.Balance != nil {
		return *m.Balance
	}
	return ""
}

func (m *GetBalanceResponse) GetNonce() string {
	if m != nil && m.Nonce != nil {
		return *m.Nonce
	}
	return ""
}

type GetSmartContractStateResponse struct {
	Error                *string  `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Initjson             *string  `protobuf:"bytes,2,opt,name=initjson" json:"initjson,omitempty"`
	Storagejson          *string  `protobuf:"bytes,3,opt,name=storagejson" json:"storagejson,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSmartContractStateResponse) Reset()         { *m = GetSmartContractStateResponse{} }
func (m *GetSmartContractStateResponse) String() string { return proto.CompactTextString(m) }
func (*GetSmartContractStateResponse) ProtoMessage()    {}
func (*GetSmartContractStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_80f2a3ea4d9d397d, []int{10}
}
func (m *GetSmartContractStateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetSmartContractStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GetSmartContractStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSmartContractStateResponse.Merge(m, src)
}
func (m *GetSmartContractStateResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetSmartContractStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSmartContractStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSmartContractStateResponse proto.InternalMessageInfo

func (m *GetSmartContractStateResponse) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *GetSmartContractStateResponse) GetInitjson() string {
	if m != nil && m.Initjson != nil {
		return *m.Initjson
	}
	return ""
}

func (m *GetSmartContractStateResponse) GetStoragejson() string {
	if m != nil && m.Storagejson != nil {
		return *m.Storagejson
	}
	return ""
}

type GetSmartContractCodeResponse struct {
	Error                *string  `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Smartcontractcode    *string  `protobuf:"bytes,2,opt,name=smartcontractcode" json:"smartcontractcode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSmartContractCodeResponse) Reset()         { *m = GetSmartContractCodeResponse{} }
func (m *GetSmartContractCodeResponse) String() string { return proto.CompactTextString(m) }
func (*GetSmartContractCodeResponse) ProtoMessage()    {}
func (*GetSmartContractCodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_80f2a3ea4d9d397d, []int{11}
}
func (m *GetSmartContractCodeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetSmartContractCodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GetSmartContractCodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSmartContractCodeResponse.Merge(m, src)
}
func (m *GetSmartContractCodeResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetSmartContractCodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSmartContractCodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSmartContractCodeResponse proto.InternalMessageInfo

func (m *GetSmartContractCodeResponse) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *GetSmartContractCodeResponse) GetSmartcontractcode() string {
	if m != nil && m.Smartcontractcode != nil {
		return *m.Smartcontractcode
	}
	return ""
}

type GetSmartContractResponse struct {
	Error                *string                                          `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Address              []*GetSmartContractResponse_ContractAddressState `protobuf:"bytes,2,rep,name=address" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *GetSmartContractResponse) Reset()         { *m = GetSmartContractResponse{} }
func (m *GetSmartContractResponse) String() string { return proto.CompactTextString(m) }
func (*GetSmartContractResponse) ProtoMessage()    {}
func (*GetSmartContractResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_80f2a3ea4d9d397d, []int{12}
}
func (m *GetSmartContractResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetSmartContractResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GetSmartContractResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSmartContractResponse.Merge(m, src)
}
func (m *GetSmartContractResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetSmartContractResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSmartContractResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSmartContractResponse proto.InternalMessageInfo

func (m *GetSmartContractResponse) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *GetSmartContractResponse) GetAddress() []*GetSmartContractResponse_ContractAddressState {
	if m != nil {
		return m.Address
	}
	return nil
}

type GetSmartContractResponse_ContractAddressState struct {
	Address              *string  `protobuf:"bytes,1,req,name=address" json:"address,omitempty"`
	State                *string  `protobuf:"bytes,2,req,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSmartContractResponse_ContractAddressState) Reset() {
	*m = GetSmartContractResponse_ContractAddressState{}
}
func (m *GetSmartContractResponse_ContractAddressState) String() string {
	return proto.CompactTextString(m)
}
func (*GetSmartContractResponse_ContractAddressState) ProtoMessage() {}
func (*GetSmartContractResponse_ContractAddressState) Descriptor() ([]byte, []int) {
	return fileDescriptor_80f2a3ea4d9d397d, []int{12, 0}
}
func (m *GetSmartContractResponse_ContractAddressState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetSmartContractResponse_ContractAddressState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GetSmartContractResponse_ContractAddressState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSmartContractResponse_ContractAddressState.Merge(m, src)
}
func (m *GetSmartContractResponse_ContractAddressState) XXX_Size() int {
	return m.Size()
}
func (m *GetSmartContractResponse_ContractAddressState) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSmartContractResponse_ContractAddressState.DiscardUnknown(m)
}

var xxx_messageInfo_GetSmartContractResponse_ContractAddressState proto.InternalMessageInfo

func (m *GetSmartContractResponse_ContractAddressState) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *GetSmartContractResponse_ContractAddressState) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

type TxBlockListingResponse struct {
	Error                *string  `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Maxpages             *int32   `protobuf:"varint,2,opt,name=maxpages" json:"maxpages,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxBlockListingResponse) Reset()         { *m = TxBlockListingResponse{} }
func (m *TxBlockListingResponse) String() string { return proto.CompactTextString(m) }
func (*TxBlockListingResponse) ProtoMessage()    {}
func (*TxBlockListingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_80f2a3ea4d9d397d, []int{13}
}
func (m *TxBlockListingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TxBlockListingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *TxBlockListingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxBlockListingResponse.Merge(m, src)
}
func (m *TxBlockListingResponse) XXX_Size() int {
	return m.Size()
}
func (m *TxBlockListingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TxBlockListingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TxBlockListingResponse proto.InternalMessageInfo

func (m *TxBlockListingResponse) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *TxBlockListingResponse) GetMaxpages() int32 {
	if m != nil && m.Maxpages != nil {
		return *m.Maxpages
	}
	return 0
}

func init() {
	proto.RegisterType((*DefaultResponse)(nil), "ZilliqaMessage.DefaultResponse")
	proto.RegisterType((*UIntResponse)(nil), "ZilliqaMessage.UIntResponse")
	proto.RegisterType((*StringResponse)(nil), "ZilliqaMessage.StringResponse")
	proto.RegisterType((*DoubleResponse)(nil), "ZilliqaMessage.DoubleResponse")
	proto.RegisterType((*UInt64Response)(nil), "ZilliqaMessage.UInt64Response")
	proto.RegisterType((*CreateTransactionResponse)(nil), "ZilliqaMessage.CreateTransactionResponse")
	proto.RegisterType((*GetTransactionResponse)(nil), "ZilliqaMessage.GetTransactionResponse")
	proto.RegisterType((*GetDSBlockResponse)(nil), "ZilliqaMessage.GetDSBlockResponse")
	proto.RegisterType((*GetTxBlockResponse)(nil), "ZilliqaMessage.GetTxBlockResponse")
	proto.RegisterType((*GetBalanceResponse)(nil), "ZilliqaMessage.GetBalanceResponse")
	proto.RegisterType((*GetSmartContractStateResponse)(nil), "ZilliqaMessage.GetSmartContractStateResponse")
	proto.RegisterType((*GetSmartContractCodeResponse)(nil), "ZilliqaMessage.GetSmartContractCodeResponse")
	proto.RegisterType((*GetSmartContractResponse)(nil), "ZilliqaMessage.GetSmartContractResponse")
	proto.RegisterType((*GetSmartContractResponse_ContractAddressState)(nil), "ZilliqaMessage.GetSmartContractResponse.ContractAddressState")
	proto.RegisterType((*TxBlockListingResponse)(nil), "ZilliqaMessage.TxBlockListingResponse")
}

func init() { proto.RegisterFile("ServerResponse.proto", fileDescriptor_80f2a3ea4d9d397d) }

var fileDescriptor_80f2a3ea4d9d397d = []byte{
	// 586 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0xc1, 0x6e, 0xd3, 0x30,
	0x18, 0xc7, 0xe5, 0x6c, 0xa3, 0xec, 0x1b, 0x6c, 0x22, 0xaa, 0xa6, 0xac, 0xda, 0xa2, 0x2a, 0x42,
	0xa8, 0x12, 0xd0, 0x4d, 0x13, 0xda, 0x61, 0x12, 0x07, 0xda, 0x8a, 0x0a, 0x04, 0x12, 0x6a, 0x87,
	0x90, 0x76, 0x73, 0x12, 0x37, 0x0b, 0xa4, 0x76, 0xb1, 0xbf, 0xa2, 0x8a, 0x17, 0xe0, 0x55, 0x78,
	0x04, 0x1e, 0x81, 0x23, 0xdc, 0x38, 0xb2, 0x3c, 0xc1, 0x8e, 0x1c, 0x51, 0x9c, 0x38, 0xb4, 0x65,
	0x55, 0x76, 0xcb, 0xff, 0xcb, 0xcf, 0xdf, 0xcf, 0xf1, 0x67, 0x05, 0xea, 0x43, 0x26, 0x3f, 0x31,
	0x39, 0x60, 0x6a, 0x22, 0xb8, 0x62, 0xed, 0x89, 0x14, 0x28, 0xec, 0xed, 0xf3, 0x38, 0x49, 0xe2,
	0x8f, 0xf4, 0x35, 0x53, 0x8a, 0x46, 0xac, 0x51, 0x5f, 0xcc, 0x39, 0xd5, 0x78, 0x1c, 0xc5, 0x78,
	0x31, 0xf5, 0xdb, 0x81, 0x18, 0x1f, 0x46, 0x22, 0x12, 0x87, 0xba, 0xec, 0x4f, 0x47, 0x3a, 0xe9,
	0xa0, 0x9f, 0x72, 0xdc, 0x3b, 0x82, 0x9d, 0x1e, 0x1b, 0xd1, 0x69, 0x82, 0xc6, 0x66, 0x1f, 0xc0,
	0x2d, 0xc9, 0xd4, 0x34, 0x41, 0x87, 0x34, 0xad, 0xd6, 0xe6, 0xe9, 0xc6, 0x05, 0x4b, 0x12, 0x31,
	0x28, 0x8a, 0xde, 0x03, 0xb8, 0xf3, 0xf6, 0x05, 0xff, 0x87, 0xef, 0x2e, 0xe0, 0x77, 0x4b, 0xae,
	0x05, 0xdb, 0x43, 0x94, 0x31, 0x8f, 0x56, 0x90, 0x9b, 0x25, 0xf9, 0x10, 0xb6, 0x7b, 0x62, 0xea,
	0x27, 0xac, 0x24, 0xf7, 0x16, 0x48, 0x72, 0x4a, 0x8e, 0xe6, 0xdb, 0x66, 0xfa, 0x93, 0x27, 0x2b,
	0xda, 0xae, 0x97, 0xe4, 0x17, 0x02, 0x7b, 0x5d, 0xc9, 0x28, 0xb2, 0x33, 0x49, 0xb9, 0xa2, 0x01,
	0xc6, 0x82, 0x97, 0xab, 0xea, 0xb0, 0xc1, 0xa4, 0x14, 0xd2, 0x21, 0x4d, 0xd2, 0xda, 0x1c, 0xe4,
	0xc1, 0xb6, 0x61, 0x3d, 0xe6, 0x23, 0xe1, 0x58, 0xba, 0xa8, 0x9f, 0xb3, 0xfe, 0x28, 0x29, 0x8f,
	0x43, 0x67, 0x4d, 0x57, 0x8b, 0x64, 0xb7, 0x60, 0x27, 0x10, 0x1c, 0x25, 0x0d, 0x90, 0x86, 0xa1,
	0x64, 0x4a, 0x39, 0xeb, 0x1a, 0x58, 0x2e, 0x7b, 0x9f, 0x61, 0xb7, 0xcf, 0xf0, 0xe6, 0xbb, 0x38,
	0x02, 0x0b, 0x67, 0x7a, 0x0f, 0x5b, 0xc7, 0xcd, 0xf6, 0xd2, 0x98, 0xdf, 0x64, 0x73, 0x9b, 0xef,
	0x65, 0xe1, 0xcc, 0x76, 0xa0, 0x26, 0x59, 0xc0, 0xe2, 0x09, 0x16, 0x9b, 0x34, 0xd1, 0xf3, 0xc1,
	0xee, 0x33, 0xec, 0x0d, 0x3b, 0x89, 0x08, 0x3e, 0x54, 0x78, 0x4f, 0xa0, 0x16, 0x2a, 0x3f, 0x03,
	0x0b, 0xf9, 0xfe, 0xb5, 0x72, 0xd3, 0xcc, 0xc0, 0x85, 0xe3, 0x6c, 0x76, 0x43, 0x07, 0xce, 0xaa,
	0x1d, 0xa6, 0x99, 0x81, 0xbd, 0x73, 0xed, 0xe8, 0xd0, 0x84, 0xf2, 0x80, 0x55, 0x38, 0x1c, 0xa8,
	0xf9, 0x39, 0x58, 0x0c, 0xd2, 0xc4, 0x8c, 0xe7, 0x22, 0xab, 0xe7, 0xa7, 0x94, 0x07, 0x4f, 0xc1,
	0x41, 0x9f, 0xe1, 0x70, 0x4c, 0x25, 0x76, 0x8b, 0xd1, 0x0d, 0x91, 0x62, 0x95, 0xa6, 0x01, 0xb7,
	0x63, 0x1e, 0xe3, 0x7b, 0x25, 0x78, 0xe1, 0x29, 0xb3, 0xdd, 0x84, 0x2d, 0x85, 0x42, 0xd2, 0x88,
	0xe9, 0xd7, 0xb9, 0x6e, 0xbe, 0xe4, 0xf9, 0xb0, 0xbf, 0x2c, 0xed, 0x8a, 0xb0, 0xca, 0xf9, 0x08,
	0xee, 0xa9, 0x6c, 0x89, 0xb9, 0x62, 0x81, 0x08, 0xcd, 0x47, 0xfe, 0xff, 0xc2, 0xfb, 0x49, 0xc0,
	0x59, 0x96, 0x54, 0x08, 0xde, 0x41, 0xcd, 0xdc, 0x66, 0xab, 0xb9, 0xd6, 0xda, 0x3a, 0x7e, 0xba,
	0x3c, 0x9f, 0x55, 0x0d, 0xdb, 0xa6, 0xf0, 0x2c, 0x5f, 0x9f, 0x1f, 0xa1, 0xe9, 0xd6, 0x78, 0x0e,
	0xf5, 0xeb, 0x80, 0x6c, 0x58, 0x46, 0x98, 0xff, 0x16, 0x4c, 0xcc, 0x36, 0xa8, 0x32, 0xc4, 0xb1,
	0x74, 0x3d, 0x0f, 0xde, 0x4b, 0xd8, 0x2d, 0x2e, 0xc7, 0xab, 0x58, 0xe1, 0xfc, 0xff, 0x65, 0xe5,
	0x94, 0xc6, 0x74, 0x36, 0xa1, 0x11, 0x53, 0xfa, 0xa0, 0x36, 0x06, 0x65, 0xee, 0xdc, 0xbf, 0xba,
	0x74, 0xc9, 0x9f, 0x4b, 0x97, 0x7c, 0x4d, 0x5d, 0xf2, 0x2d, 0x75, 0xc9, 0xf7, 0xd4, 0x25, 0x3f,
	0x52, 0x97, 0xfc, 0x4a, 0x5d, 0xf2, 0x3b, 0x75, 0xc9, 0x55, 0xea, 0x92, 0xbf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x64, 0x99, 0x3b, 0x34, 0x8f, 0x05, 0x00, 0x00,
}

func (this *DefaultResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DefaultResponse)
	if !ok {
		that2, ok := that.(DefaultResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Result != nil && that1.Result != nil {
		if *this.Result != *that1.Result {
			return false
		}
	} else if this.Result != nil {
		return false
	} else if that1.Result != nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *UIntResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UIntResponse)
	if !ok {
		that2, ok := that.(UIntResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Result != nil && that1.Result != nil {
		if *this.Result != *that1.Result {
			return false
		}
	} else if this.Result != nil {
		return false
	} else if that1.Result != nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *StringResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*StringResponse)
	if !ok {
		that2, ok := that.(StringResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Result != nil && that1.Result != nil {
		if *this.Result != *that1.Result {
			return false
		}
	} else if this.Result != nil {
		return false
	} else if that1.Result != nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *DoubleResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DoubleResponse)
	if !ok {
		that2, ok := that.(DoubleResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Result != nil && that1.Result != nil {
		if *this.Result != *that1.Result {
			return false
		}
	} else if this.Result != nil {
		return false
	} else if that1.Result != nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *UInt64Response) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UInt64Response)
	if !ok {
		that2, ok := that.(UInt64Response)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Result != nil && that1.Result != nil {
		if *this.Result != *that1.Result {
			return false
		}
	} else if this.Result != nil {
		return false
	} else if that1.Result != nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *CreateTransactionResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateTransactionResponse)
	if !ok {
		that2, ok := that.(CreateTransactionResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Error != nil && that1.Error != nil {
		if *this.Error != *that1.Error {
			return false
		}
	} else if this.Error != nil {
		return false
	} else if that1.Error != nil {
		return false
	}
	if this.Info != nil && that1.Info != nil {
		if *this.Info != *that1.Info {
			return false
		}
	} else if this.Info != nil {
		return false
	} else if that1.Info != nil {
		return false
	}
	if this.Tranid != nil && that1.Tranid != nil {
		if *this.Tranid != *that1.Tranid {
			return false
		}
	} else if this.Tranid != nil {
		return false
	} else if that1.Tranid != nil {
		return false
	}
	if this.Contractaddress != nil && that1.Contractaddress != nil {
		if *this.Contractaddress != *that1.Contractaddress {
			return false
		}
	} else if this.Contractaddress != nil {
		return false
	} else if that1.Contractaddress != nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *GetTransactionResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetTransactionResponse)
	if !ok {
		that2, ok := that.(GetTransactionResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Error != nil && that1.Error != nil {
		if *this.Error != *that1.Error {
			return false
		}
	} else if this.Error != nil {
		return false
	} else if that1.Error != nil {
		return false
	}
	if !this.Tx.Equal(that1.Tx) {
		return false
	}
	if this.Receipt != nil && that1.Receipt != nil {
		if *this.Receipt != *that1.Receipt {
			return false
		}
	} else if this.Receipt != nil {
		return false
	} else if that1.Receipt != nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *GetDSBlockResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetDSBlockResponse)
	if !ok {
		that2, ok := that.(GetDSBlockResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Error != nil && that1.Error != nil {
		if *this.Error != *that1.Error {
			return false
		}
	} else if this.Error != nil {
		return false
	} else if that1.Error != nil {
		return false
	}
	if !this.Dsblock.Equal(that1.Dsblock) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *GetTxBlockResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetTxBlockResponse)
	if !ok {
		that2, ok := that.(GetTxBlockResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Error != nil && that1.Error != nil {
		if *this.Error != *that1.Error {
			return false
		}
	} else if this.Error != nil {
		return false
	} else if that1.Error != nil {
		return false
	}
	if !this.Txblock.Equal(that1.Txblock) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *GetBalanceResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetBalanceResponse)
	if !ok {
		that2, ok := that.(GetBalanceResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Error != nil && that1.Error != nil {
		if *this.Error != *that1.Error {
			return false
		}
	} else if this.Error != nil {
		return false
	} else if that1.Error != nil {
		return false
	}
	if this.Balance != nil && that1.Balance != nil {
		if *this.Balance != *that1.Balance {
			return false
		}
	} else if this.Balance != nil {
		return false
	} else if that1.Balance != nil {
		return false
	}
	if this.Nonce != nil && that1.Nonce != nil {
		if *this.Nonce != *that1.Nonce {
			return false
		}
	} else if this.Nonce != nil {
		return false
	} else if that1.Nonce != nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *GetSmartContractStateResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSmartContractStateResponse)
	if !ok {
		that2, ok := that.(GetSmartContractStateResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Error != nil && that1.Error != nil {
		if *this.Error != *that1.Error {
			return false
		}
	} else if this.Error != nil {
		return false
	} else if that1.Error != nil {
		return false
	}
	if this.Initjson != nil && that1.Initjson != nil {
		if *this.Initjson != *that1.Initjson {
			return false
		}
	} else if this.Initjson != nil {
		return false
	} else if that1.Initjson != nil {
		return false
	}
	if this.Storagejson != nil && that1.Storagejson != nil {
		if *this.Storagejson != *that1.Storagejson {
			return false
		}
	} else if this.Storagejson != nil {
		return false
	} else if that1.Storagejson != nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *GetSmartContractCodeResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSmartContractCodeResponse)
	if !ok {
		that2, ok := that.(GetSmartContractCodeResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Error != nil && that1.Error != nil {
		if *this.Error != *that1.Error {
			return false
		}
	} else if this.Error != nil {
		return false
	} else if that1.Error != nil {
		return false
	}
	if this.Smartcontractcode != nil && that1.Smartcontractcode != nil {
		if *this.Smartcontractcode != *that1.Smartcontractcode {
			return false
		}
	} else if this.Smartcontractcode != nil {
		return false
	} else if that1.Smartcontractcode != nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *GetSmartContractResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSmartContractResponse)
	if !ok {
		that2, ok := that.(GetSmartContractResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Error != nil && that1.Error != nil {
		if *this.Error != *that1.Error {
			return false
		}
	} else if this.Error != nil {
		return false
	} else if that1.Error != nil {
		return false
	}
	if len(this.Address) != len(that1.Address) {
		return false
	}
	for i := range this.Address {
		if !this.Address[i].Equal(that1.Address[i]) {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *GetSmartContractResponse_ContractAddressState) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetSmartContractResponse_ContractAddressState)
	if !ok {
		that2, ok := that.(GetSmartContractResponse_ContractAddressState)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Address != nil && that1.Address != nil {
		if *this.Address != *that1.Address {
			return false
		}
	} else if this.Address != nil {
		return false
	} else if that1.Address != nil {
		return false
	}
	if this.State != nil && that1.State != nil {
		if *this.State != *that1.State {
			return false
		}
	} else if this.State != nil {
		return false
	} else if that1.State != nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *TxBlockListingResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*TxBlockListingResponse)
	if !ok {
		that2, ok := that.(TxBlockListingResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Error != nil && that1.Error != nil {
		if *this.Error != *that1.Error {
			return false
		}
	} else if this.Error != nil {
		return false
	} else if that1.Error != nil {
		return false
	}
	if this.Maxpages != nil && that1.Maxpages != nil {
		if *this.Maxpages != *that1.Maxpages {
			return false
		}
	} else if this.Maxpages != nil {
		return false
	} else if that1.Maxpages != nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *DefaultResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&ZilliqaMessage.DefaultResponse{")
	if this.Result != nil {
		s = append(s, "Result: "+valueToGoStringServerResponse(this.Result, "string")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *UIntResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&ZilliqaMessage.UIntResponse{")
	if this.Result != nil {
		s = append(s, "Result: "+valueToGoStringServerResponse(this.Result, "uint32")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *StringResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&ZilliqaMessage.StringResponse{")
	if this.Result != nil {
		s = append(s, "Result: "+valueToGoStringServerResponse(this.Result, "string")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *DoubleResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&ZilliqaMessage.DoubleResponse{")
	if this.Result != nil {
		s = append(s, "Result: "+valueToGoStringServerResponse(this.Result, "float64")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *UInt64Response) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&ZilliqaMessage.UInt64Response{")
	if this.Result != nil {
		s = append(s, "Result: "+valueToGoStringServerResponse(this.Result, "uint64")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateTransactionResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&ZilliqaMessage.CreateTransactionResponse{")
	if this.Error != nil {
		s = append(s, "Error: "+valueToGoStringServerResponse(this.Error, "string")+",\n")
	}
	if this.Info != nil {
		s = append(s, "Info: "+valueToGoStringServerResponse(this.Info, "string")+",\n")
	}
	if this.Tranid != nil {
		s = append(s, "Tranid: "+valueToGoStringServerResponse(this.Tranid, "string")+",\n")
	}
	if this.Contractaddress != nil {
		s = append(s, "Contractaddress: "+valueToGoStringServerResponse(this.Contractaddress, "string")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetTransactionResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&ZilliqaMessage.GetTransactionResponse{")
	if this.Error != nil {
		s = append(s, "Error: "+valueToGoStringServerResponse(this.Error, "string")+",\n")
	}
	if this.Tx != nil {
		s = append(s, "Tx: "+fmt.Sprintf("%#v", this.Tx)+",\n")
	}
	if this.Receipt != nil {
		s = append(s, "Receipt: "+valueToGoStringServerResponse(this.Receipt, "string")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetDSBlockResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&ZilliqaMessage.GetDSBlockResponse{")
	if this.Error != nil {
		s = append(s, "Error: "+valueToGoStringServerResponse(this.Error, "string")+",\n")
	}
	if this.Dsblock != nil {
		s = append(s, "Dsblock: "+fmt.Sprintf("%#v", this.Dsblock)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetTxBlockResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&ZilliqaMessage.GetTxBlockResponse{")
	if this.Error != nil {
		s = append(s, "Error: "+valueToGoStringServerResponse(this.Error, "string")+",\n")
	}
	if this.Txblock != nil {
		s = append(s, "Txblock: "+fmt.Sprintf("%#v", this.Txblock)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetBalanceResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&ZilliqaMessage.GetBalanceResponse{")
	if this.Error != nil {
		s = append(s, "Error: "+valueToGoStringServerResponse(this.Error, "string")+",\n")
	}
	if this.Balance != nil {
		s = append(s, "Balance: "+valueToGoStringServerResponse(this.Balance, "string")+",\n")
	}
	if this.Nonce != nil {
		s = append(s, "Nonce: "+valueToGoStringServerResponse(this.Nonce, "string")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetSmartContractStateResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&ZilliqaMessage.GetSmartContractStateResponse{")
	if this.Error != nil {
		s = append(s, "Error: "+valueToGoStringServerResponse(this.Error, "string")+",\n")
	}
	if this.Initjson != nil {
		s = append(s, "Initjson: "+valueToGoStringServerResponse(this.Initjson, "string")+",\n")
	}
	if this.Storagejson != nil {
		s = append(s, "Storagejson: "+valueToGoStringServerResponse(this.Storagejson, "string")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetSmartContractCodeResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&ZilliqaMessage.GetSmartContractCodeResponse{")
	if this.Error != nil {
		s = append(s, "Error: "+valueToGoStringServerResponse(this.Error, "string")+",\n")
	}
	if this.Smartcontractcode != nil {
		s = append(s, "Smartcontractcode: "+valueToGoStringServerResponse(this.Smartcontractcode, "string")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetSmartContractResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&ZilliqaMessage.GetSmartContractResponse{")
	if this.Error != nil {
		s = append(s, "Error: "+valueToGoStringServerResponse(this.Error, "string")+",\n")
	}
	if this.Address != nil {
		s = append(s, "Address: "+fmt.Sprintf("%#v", this.Address)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetSmartContractResponse_ContractAddressState) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&ZilliqaMessage.GetSmartContractResponse_ContractAddressState{")
	if this.Address != nil {
		s = append(s, "Address: "+valueToGoStringServerResponse(this.Address, "string")+",\n")
	}
	if this.State != nil {
		s = append(s, "State: "+valueToGoStringServerResponse(this.State, "string")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TxBlockListingResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&ZilliqaMessage.TxBlockListingResponse{")
	if this.Error != nil {
		s = append(s, "Error: "+valueToGoStringServerResponse(this.Error, "string")+",\n")
	}
	if this.Maxpages != nil {
		s = append(s, "Maxpages: "+valueToGoStringServerResponse(this.Maxpages, "int32")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringServerResponse(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *DefaultResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DefaultResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DefaultResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		i -= len(*m.Result)
		copy(dAtA[i:], *m.Result)
		i = encodeVarintServerResponse(dAtA, i, uint64(len(*m.Result)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UIntResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UIntResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UIntResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		i = encodeVarintServerResponse(dAtA, i, uint64(*m.Result))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *StringResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StringResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StringResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		i -= len(*m.Result)
		copy(dAtA[i:], *m.Result)
		i = encodeVarintServerResponse(dAtA, i, uint64(len(*m.Result)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DoubleResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DoubleResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DoubleResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(*m.Result))))
		i--
		dAtA[i] = 0x9
	}
	return len(dAtA) - i, nil
}

func (m *UInt64Response) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UInt64Response) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UInt64Response) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		i = encodeVarintServerResponse(dAtA, i, uint64(*m.Result))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CreateTransactionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateTransactionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateTransactionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Contractaddress != nil {
		i -= len(*m.Contractaddress)
		copy(dAtA[i:], *m.Contractaddress)
		i = encodeVarintServerResponse(dAtA, i, uint64(len(*m.Contractaddress)))
		i--
		dAtA[i] = 0x22
	}
	if m.Tranid != nil {
		i -= len(*m.Tranid)
		copy(dAtA[i:], *m.Tranid)
		i = encodeVarintServerResponse(dAtA, i, uint64(len(*m.Tranid)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Info != nil {
		i -= len(*m.Info)
		copy(dAtA[i:], *m.Info)
		i = encodeVarintServerResponse(dAtA, i, uint64(len(*m.Info)))
		i--
		dAtA[i] = 0x12
	}
	if m.Error != nil {
		i -= len(*m.Error)
		copy(dAtA[i:], *m.Error)
		i = encodeVarintServerResponse(dAtA, i, uint64(len(*m.Error)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetTransactionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetTransactionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetTransactionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Receipt != nil {
		i -= len(*m.Receipt)
		copy(dAtA[i:], *m.Receipt)
		i = encodeVarintServerResponse(dAtA, i, uint64(len(*m.Receipt)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Tx != nil {
		{
			size, err := m.Tx.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintServerResponse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Error != nil {
		i -= len(*m.Error)
		copy(dAtA[i:], *m.Error)
		i = encodeVarintServerResponse(dAtA, i, uint64(len(*m.Error)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetDSBlockResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetDSBlockResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetDSBlockResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Dsblock != nil {
		{
			size, err := m.Dsblock.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintServerResponse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Error != nil {
		i -= len(*m.Error)
		copy(dAtA[i:], *m.Error)
		i = encodeVarintServerResponse(dAtA, i, uint64(len(*m.Error)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetTxBlockResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetTxBlockResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetTxBlockResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Txblock != nil {
		{
			size, err := m.Txblock.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintServerResponse(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Error != nil {
		i -= len(*m.Error)
		copy(dAtA[i:], *m.Error)
		i = encodeVarintServerResponse(dAtA, i, uint64(len(*m.Error)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetBalanceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetBalanceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetBalanceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Nonce != nil {
		i -= len(*m.Nonce)
		copy(dAtA[i:], *m.Nonce)
		i = encodeVarintServerResponse(dAtA, i, uint64(len(*m.Nonce)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Balance != nil {
		i -= len(*m.Balance)
		copy(dAtA[i:], *m.Balance)
		i = encodeVarintServerResponse(dAtA, i, uint64(len(*m.Balance)))
		i--
		dAtA[i] = 0x12
	}
	if m.Error != nil {
		i -= len(*m.Error)
		copy(dAtA[i:], *m.Error)
		i = encodeVarintServerResponse(dAtA, i, uint64(len(*m.Error)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetSmartContractStateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetSmartContractStateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSmartContractStateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Storagejson != nil {
		i -= len(*m.Storagejson)
		copy(dAtA[i:], *m.Storagejson)
		i = encodeVarintServerResponse(dAtA, i, uint64(len(*m.Storagejson)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Initjson != nil {
		i -= len(*m.Initjson)
		copy(dAtA[i:], *m.Initjson)
		i = encodeVarintServerResponse(dAtA, i, uint64(len(*m.Initjson)))
		i--
		dAtA[i] = 0x12
	}
	if m.Error != nil {
		i -= len(*m.Error)
		copy(dAtA[i:], *m.Error)
		i = encodeVarintServerResponse(dAtA, i, uint64(len(*m.Error)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetSmartContractCodeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetSmartContractCodeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSmartContractCodeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Smartcontractcode != nil {
		i -= len(*m.Smartcontractcode)
		copy(dAtA[i:], *m.Smartcontractcode)
		i = encodeVarintServerResponse(dAtA, i, uint64(len(*m.Smartcontractcode)))
		i--
		dAtA[i] = 0x12
	}
	if m.Error != nil {
		i -= len(*m.Error)
		copy(dAtA[i:], *m.Error)
		i = encodeVarintServerResponse(dAtA, i, uint64(len(*m.Error)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetSmartContractResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetSmartContractResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSmartContractResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Address) > 0 {
		for iNdEx := len(m.Address) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Address[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintServerResponse(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Error != nil {
		i -= len(*m.Error)
		copy(dAtA[i:], *m.Error)
		i = encodeVarintServerResponse(dAtA, i, uint64(len(*m.Error)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetSmartContractResponse_ContractAddressState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetSmartContractResponse_ContractAddressState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetSmartContractResponse_ContractAddressState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("state")
	} else {
		i -= len(*m.State)
		copy(dAtA[i:], *m.State)
		i = encodeVarintServerResponse(dAtA, i, uint64(len(*m.State)))
		i--
		dAtA[i] = 0x12
	}
	if m.Address == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("address")
	} else {
		i -= len(*m.Address)
		copy(dAtA[i:], *m.Address)
		i = encodeVarintServerResponse(dAtA, i, uint64(len(*m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TxBlockListingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TxBlockListingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TxBlockListingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Maxpages != nil {
		i = encodeVarintServerResponse(dAtA, i, uint64(*m.Maxpages))
		i--
		dAtA[i] = 0x10
	}
	if m.Error != nil {
		i -= len(*m.Error)
		copy(dAtA[i:], *m.Error)
		i = encodeVarintServerResponse(dAtA, i, uint64(len(*m.Error)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintServerResponse(dAtA []byte, offset int, v uint64) int {
	offset -= sovServerResponse(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func NewPopulatedDefaultResponse(r randyServerResponse, easy bool) *DefaultResponse {
	this := &DefaultResponse{}
	v1 := string(randStringServerResponse(r))
	this.Result = &v1
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerResponse(r, 2)
	}
	return this
}

func NewPopulatedUIntResponse(r randyServerResponse, easy bool) *UIntResponse {
	this := &UIntResponse{}
	v2 := uint32(r.Uint32())
	this.Result = &v2
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerResponse(r, 2)
	}
	return this
}

func NewPopulatedStringResponse(r randyServerResponse, easy bool) *StringResponse {
	this := &StringResponse{}
	v3 := string(randStringServerResponse(r))
	this.Result = &v3
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerResponse(r, 2)
	}
	return this
}

func NewPopulatedDoubleResponse(r randyServerResponse, easy bool) *DoubleResponse {
	this := &DoubleResponse{}
	v4 := float64(r.Float64())
	if r.Intn(2) == 0 {
		v4 *= -1
	}
	this.Result = &v4
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerResponse(r, 2)
	}
	return this
}

func NewPopulatedUInt64Response(r randyServerResponse, easy bool) *UInt64Response {
	this := &UInt64Response{}
	v5 := uint64(uint64(r.Uint32()))
	this.Result = &v5
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerResponse(r, 2)
	}
	return this
}

func NewPopulatedCreateTransactionResponse(r randyServerResponse, easy bool) *CreateTransactionResponse {
	this := &CreateTransactionResponse{}
	if r.Intn(5) != 0 {
		v6 := string(randStringServerResponse(r))
		this.Error = &v6
	}
	if r.Intn(5) != 0 {
		v7 := string(randStringServerResponse(r))
		this.Info = &v7
	}
	if r.Intn(5) != 0 {
		v8 := string(randStringServerResponse(r))
		this.Tranid = &v8
	}
	if r.Intn(5) != 0 {
		v9 := string(randStringServerResponse(r))
		this.Contractaddress = &v9
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerResponse(r, 5)
	}
	return this
}

func NewPopulatedGetTransactionResponse(r randyServerResponse, easy bool) *GetTransactionResponse {
	this := &GetTransactionResponse{}
	if r.Intn(5) != 0 {
		v10 := string(randStringServerResponse(r))
		this.Error = &v10
	}
	if r.Intn(5) != 0 {
		this.Tx = NewPopulatedProtoTransaction(r, easy)
	}
	if r.Intn(5) != 0 {
		v11 := string(randStringServerResponse(r))
		this.Receipt = &v11
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerResponse(r, 4)
	}
	return this
}

func NewPopulatedGetDSBlockResponse(r randyServerResponse, easy bool) *GetDSBlockResponse {
	this := &GetDSBlockResponse{}
	if r.Intn(5) != 0 {
		v12 := string(randStringServerResponse(r))
		this.Error = &v12
	}
	if r.Intn(5) != 0 {
		this.Dsblock = NewPopulatedProtoDSBlock(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerResponse(r, 3)
	}
	return this
}

func NewPopulatedGetTxBlockResponse(r randyServerResponse, easy bool) *GetTxBlockResponse {
	this := &GetTxBlockResponse{}
	if r.Intn(5) != 0 {
		v13 := string(randStringServerResponse(r))
		this.Error = &v13
	}
	if r.Intn(5) != 0 {
		this.Txblock = NewPopulatedProtoTxBlock(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerResponse(r, 3)
	}
	return this
}

func NewPopulatedGetBalanceResponse(r randyServerResponse, easy bool) *GetBalanceResponse {
	this := &GetBalanceResponse{}
	if r.Intn(5) != 0 {
		v14 := string(randStringServerResponse(r))
		this.Error = &v14
	}
	if r.Intn(5) != 0 {
		v15 := string(randStringServerResponse(r))
		this.Balance = &v15
	}
	if r.Intn(5) != 0 {
		v16 := string(randStringServerResponse(r))
		this.Nonce = &v16
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerResponse(r, 4)
	}
	return this
}

func NewPopulatedGetSmartContractStateResponse(r randyServerResponse, easy bool) *GetSmartContractStateResponse {
	this := &GetSmartContractStateResponse{}
	if r.Intn(5) != 0 {
		v17 := string(randStringServerResponse(r))
		this.Error = &v17
	}
	if r.Intn(5) != 0 {
		v18 := string(randStringServerResponse(r))
		this.Initjson = &v18
	}
	if r.Intn(5) != 0 {
		v19 := string(randStringServerResponse(r))
		this.Storagejson = &v19
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerResponse(r, 4)
	}
	return this
}

func NewPopulatedGetSmartContractCodeResponse(r randyServerResponse, easy bool) *GetSmartContractCodeResponse {
	this := &GetSmartContractCodeResponse{}
	if r.Intn(5) != 0 {
		v20 := string(randStringServerResponse(r))
		this.Error = &v20
	}
	if r.Intn(5) != 0 {
		v21 := string(randStringServerResponse(r))
		this.Smartcontractcode = &v21
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerResponse(r, 3)
	}
	return this
}

func NewPopulatedGetSmartContractResponse(r randyServerResponse, easy bool) *GetSmartContractResponse {
	this := &GetSmartContractResponse{}
	if r.Intn(5) != 0 {
		v22 := string(randStringServerResponse(r))
		this.Error = &v22
	}
	if r.Intn(5) != 0 {
		v23 := r.Intn(5)
		this.Address = make([]*GetSmartContractResponse_ContractAddressState, v23)
		for i := 0; i < v23; i++ {
			this.Address[i] = NewPopulatedGetSmartContractResponse_ContractAddressState(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerResponse(r, 3)
	}
	return this
}

func NewPopulatedGetSmartContractResponse_ContractAddressState(r randyServerResponse, easy bool) *GetSmartContractResponse_ContractAddressState {
	this := &GetSmartContractResponse_ContractAddressState{}
	v24 := string(randStringServerResponse(r))
	this.Address = &v24
	v25 := string(randStringServerResponse(r))
	this.State = &v25
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerResponse(r, 3)
	}
	return this
}

func NewPopulatedTxBlockListingResponse(r randyServerResponse, easy bool) *TxBlockListingResponse {
	this := &TxBlockListingResponse{}
	if r.Intn(5) != 0 {
		v26 := string(randStringServerResponse(r))
		this.Error = &v26
	}
	if r.Intn(5) != 0 {
		v27 := int32(r.Int31())
		if r.Intn(2) == 0 {
			v27 *= -1
		}
		this.Maxpages = &v27
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerResponse(r, 3)
	}
	return this
}

type randyServerResponse interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneServerResponse(r randyServerResponse) rune {
	ru := r.Intn(62)
	if ru < 10 {
		return rune(ru + 48)
	} else if ru < 36 {
		return rune(ru + 55)
	}
	return rune(ru + 61)
}
func randStringServerResponse(r randyServerResponse) string {
	v28 := r.Intn(100)
	tmps := make([]rune, v28)
	for i := 0; i < v28; i++ {
		tmps[i] = randUTF8RuneServerResponse(r)
	}
	return string(tmps)
}
func randUnrecognizedServerResponse(r randyServerResponse, maxFieldNumber int) (dAtA []byte) {
	l := r.Intn(5)
	for i := 0; i < l; i++ {
		wire := r.Intn(4)
		if wire == 3 {
			wire = 5
		}
		fieldNumber := maxFieldNumber + r.Intn(100)
		dAtA = randFieldServerResponse(dAtA, r, fieldNumber, wire)
	}
	return dAtA
}
func randFieldServerResponse(dAtA []byte, r randyServerResponse, fieldNumber int, wire int) []byte {
	key := uint32(fieldNumber)<<3 | uint32(wire)
	switch wire {
	case 0:
		dAtA = encodeVarintPopulateServerResponse(dAtA, uint64(key))
		v29 := r.Int63()
		if r.Intn(2) == 0 {
			v29 *= -1
		}
		dAtA = encodeVarintPopulateServerResponse(dAtA, uint64(v29))
	case 1:
		dAtA = encodeVarintPopulateServerResponse(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	case 2:
		dAtA = encodeVarintPopulateServerResponse(dAtA, uint64(key))
		ll := r.Intn(100)
		dAtA = encodeVarintPopulateServerResponse(dAtA, uint64(ll))
		for j := 0; j < ll; j++ {
			dAtA = append(dAtA, byte(r.Intn(256)))
		}
	default:
		dAtA = encodeVarintPopulateServerResponse(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	}
	return dAtA
}
func encodeVarintPopulateServerResponse(dAtA []byte, v uint64) []byte {
	for v >= 1<<7 {
		dAtA = append(dAtA, uint8(uint64(v)&0x7f|0x80))
		v >>= 7
	}
	dAtA = append(dAtA, uint8(v))
	return dAtA
}
func (m *DefaultResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		l = len(*m.Result)
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UIntResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovServerResponse(uint64(*m.Result))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StringResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		l = len(*m.Result)
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DoubleResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 9
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UInt64Response) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		n += 1 + sovServerResponse(uint64(*m.Result))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateTransactionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != nil {
		l = len(*m.Error)
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.Info != nil {
		l = len(*m.Info)
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.Tranid != nil {
		l = len(*m.Tranid)
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.Contractaddress != nil {
		l = len(*m.Contractaddress)
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetTransactionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != nil {
		l = len(*m.Error)
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.Tx != nil {
		l = m.Tx.Size()
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.Receipt != nil {
		l = len(*m.Receipt)
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetDSBlockResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != nil {
		l = len(*m.Error)
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.Dsblock != nil {
		l = m.Dsblock.Size()
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetTxBlockResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != nil {
		l = len(*m.Error)
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.Txblock != nil {
		l = m.Txblock.Size()
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetBalanceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != nil {
		l = len(*m.Error)
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.Balance != nil {
		l = len(*m.Balance)
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.Nonce != nil {
		l = len(*m.Nonce)
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetSmartContractStateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != nil {
		l = len(*m.Error)
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.Initjson != nil {
		l = len(*m.Initjson)
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.Storagejson != nil {
		l = len(*m.Storagejson)
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetSmartContractCodeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != nil {
		l = len(*m.Error)
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.Smartcontractcode != nil {
		l = len(*m.Smartcontractcode)
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetSmartContractResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != nil {
		l = len(*m.Error)
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if len(m.Address) > 0 {
		for _, e := range m.Address {
			l = e.Size()
			n += 1 + l + sovServerResponse(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetSmartContractResponse_ContractAddressState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Address != nil {
		l = len(*m.Address)
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.State != nil {
		l = len(*m.State)
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TxBlockListingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != nil {
		l = len(*m.Error)
		n += 1 + l + sovServerResponse(uint64(l))
	}
	if m.Maxpages != nil {
		n += 1 + sovServerResponse(uint64(*m.Maxpages))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovServerResponse(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozServerResponse(x uint64) (n int) {
	return sovServerResponse(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *DefaultResponse) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DefaultResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DefaultResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Result = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipServerResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("result")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UIntResponse) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UIntResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UIntResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipServerResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("result")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StringResponse) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StringResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StringResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Result = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipServerResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("result")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DoubleResponse) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DoubleResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DoubleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			v2 := float64(math.Float64frombits(v))
			m.Result = &v2
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipServerResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("result")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UInt64Response) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UInt64Response: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UInt64Response: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = &v
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipServerResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("result")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateTransactionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateTransactionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateTransactionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Error = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Info = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tranid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Tranid = &s
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contractaddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Contractaddress = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServerResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetTransactionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetTransactionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetTransactionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Error = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tx", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Tx == nil {
				m.Tx = &ProtoTransaction{}
			}
			if err := m.Tx.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receipt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Receipt = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServerResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetDSBlockResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetDSBlockResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetDSBlockResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Error = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dsblock", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Dsblock == nil {
				m.Dsblock = &ProtoDSBlock{}
			}
			if err := m.Dsblock.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServerResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetTxBlockResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetTxBlockResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetTxBlockResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Error = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Txblock", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Txblock == nil {
				m.Txblock = &ProtoTxBlock{}
			}
			if err := m.Txblock.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServerResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetBalanceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetBalanceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetBalanceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Error = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Balance", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Balance = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Nonce = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServerResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetSmartContractStateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetSmartContractStateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetSmartContractStateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Error = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Initjson", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Initjson = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Storagejson", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Storagejson = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServerResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetSmartContractCodeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetSmartContractCodeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetSmartContractCodeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Error = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Smartcontractcode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Smartcontractcode = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServerResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetSmartContractResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetSmartContractResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetSmartContractResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Error = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = append(m.Address, &GetSmartContractResponse_ContractAddressState{})
			if err := m.Address[len(m.Address)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServerResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetSmartContractResponse_ContractAddressState) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContractAddressState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContractAddressState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Address = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.State = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipServerResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("address")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("state")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TxBlockListingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerResponse
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TxBlockListingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TxBlockListingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerResponse
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerResponse
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Error = &s
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Maxpages", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Maxpages = &v
		default:
			iNdEx = preIndex
			skippy, err := skipServerResponse(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerResponse
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipServerResponse(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowServerResponse
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowServerResponse
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthServerResponse
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupServerResponse
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthServerResponse
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthServerResponse        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowServerResponse          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupServerResponse = fmt.Errorf("proto: unexpected end of group")
)
