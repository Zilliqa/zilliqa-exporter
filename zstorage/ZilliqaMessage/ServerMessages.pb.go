// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ServerMessages.proto

package ZilliqaMessage

import (
	bytes "bytes"
	encoding_binary "encoding/binary"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ProtoTxId struct {
	Txid                 *string  `protobuf:"bytes,1,req,name=txid" json:"txid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProtoTxId) Reset()         { *m = ProtoTxId{} }
func (m *ProtoTxId) String() string { return proto.CompactTextString(m) }
func (*ProtoTxId) ProtoMessage()    {}
func (*ProtoTxId) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d90f80a2195a67f, []int{0}
}
func (m *ProtoTxId) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProtoTxId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ProtoTxId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtoTxId.Merge(m, src)
}
func (m *ProtoTxId) XXX_Size() int {
	return m.Size()
}
func (m *ProtoTxId) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtoTxId.DiscardUnknown(m)
}

var xxx_messageInfo_ProtoTxId proto.InternalMessageInfo

func (m *ProtoTxId) GetTxid() string {
	if m != nil && m.Txid != nil {
		return *m.Txid
	}
	return ""
}

type ProtoTxHash struct {
	Txhash               *string  `protobuf:"bytes,1,req,name=txhash" json:"txhash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProtoTxHash) Reset()         { *m = ProtoTxHash{} }
func (m *ProtoTxHash) String() string { return proto.CompactTextString(m) }
func (*ProtoTxHash) ProtoMessage()    {}
func (*ProtoTxHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d90f80a2195a67f, []int{1}
}
func (m *ProtoTxHash) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProtoTxHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ProtoTxHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtoTxHash.Merge(m, src)
}
func (m *ProtoTxHash) XXX_Size() int {
	return m.Size()
}
func (m *ProtoTxHash) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtoTxHash.DiscardUnknown(m)
}

var xxx_messageInfo_ProtoTxHash proto.InternalMessageInfo

func (m *ProtoTxHash) GetTxhash() string {
	if m != nil && m.Txhash != nil {
		return *m.Txhash
	}
	return ""
}

type ProtoTxHashes struct {
	Number               *uint64        `protobuf:"varint,1,req,name=number" json:"number,omitempty"`
	Txhashes             []*ProtoTxHash `protobuf:"bytes,2,rep,name=txhashes" json:"txhashes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ProtoTxHashes) Reset()         { *m = ProtoTxHashes{} }
func (m *ProtoTxHashes) String() string { return proto.CompactTextString(m) }
func (*ProtoTxHashes) ProtoMessage()    {}
func (*ProtoTxHashes) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d90f80a2195a67f, []int{2}
}
func (m *ProtoTxHashes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProtoTxHashes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ProtoTxHashes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtoTxHashes.Merge(m, src)
}
func (m *ProtoTxHashes) XXX_Size() int {
	return m.Size()
}
func (m *ProtoTxHashes) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtoTxHashes.DiscardUnknown(m)
}

var xxx_messageInfo_ProtoTxHashes proto.InternalMessageInfo

func (m *ProtoTxHashes) GetNumber() uint64 {
	if m != nil && m.Number != nil {
		return *m.Number
	}
	return 0
}

func (m *ProtoTxHashes) GetTxhashes() []*ProtoTxHash {
	if m != nil {
		return m.Txhashes
	}
	return nil
}

type ProtoAddress struct {
	Address              *string  `protobuf:"bytes,1,req,name=address" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProtoAddress) Reset()         { *m = ProtoAddress{} }
func (m *ProtoAddress) String() string { return proto.CompactTextString(m) }
func (*ProtoAddress) ProtoMessage()    {}
func (*ProtoAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d90f80a2195a67f, []int{3}
}
func (m *ProtoAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProtoAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ProtoAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtoAddress.Merge(m, src)
}
func (m *ProtoAddress) XXX_Size() int {
	return m.Size()
}
func (m *ProtoAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtoAddress.DiscardUnknown(m)
}

var xxx_messageInfo_ProtoAddress proto.InternalMessageInfo

func (m *ProtoAddress) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

type ProtoBlockNum struct {
	Blocknum             *uint64  `protobuf:"varint,1,req,name=blocknum" json:"blocknum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProtoBlockNum) Reset()         { *m = ProtoBlockNum{} }
func (m *ProtoBlockNum) String() string { return proto.CompactTextString(m) }
func (*ProtoBlockNum) ProtoMessage()    {}
func (*ProtoBlockNum) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d90f80a2195a67f, []int{4}
}
func (m *ProtoBlockNum) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProtoBlockNum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ProtoBlockNum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtoBlockNum.Merge(m, src)
}
func (m *ProtoBlockNum) XXX_Size() int {
	return m.Size()
}
func (m *ProtoBlockNum) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtoBlockNum.DiscardUnknown(m)
}

var xxx_messageInfo_ProtoBlockNum proto.InternalMessageInfo

func (m *ProtoBlockNum) GetBlocknum() uint64 {
	if m != nil && m.Blocknum != nil {
		return *m.Blocknum
	}
	return 0
}

type ProtoStorageInfo struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProtoStorageInfo) Reset()         { *m = ProtoStorageInfo{} }
func (m *ProtoStorageInfo) String() string { return proto.CompactTextString(m) }
func (*ProtoStorageInfo) ProtoMessage()    {}
func (*ProtoStorageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d90f80a2195a67f, []int{5}
}
func (m *ProtoStorageInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProtoStorageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ProtoStorageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtoStorageInfo.Merge(m, src)
}
func (m *ProtoStorageInfo) XXX_Size() int {
	return m.Size()
}
func (m *ProtoStorageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtoStorageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ProtoStorageInfo proto.InternalMessageInfo

type ProtoShardingStruct struct {
	Error                *string  `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Numpeers             []uint32 `protobuf:"varint,2,rep,name=numpeers" json:"numpeers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProtoShardingStruct) Reset()         { *m = ProtoShardingStruct{} }
func (m *ProtoShardingStruct) String() string { return proto.CompactTextString(m) }
func (*ProtoShardingStruct) ProtoMessage()    {}
func (*ProtoShardingStruct) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d90f80a2195a67f, []int{6}
}
func (m *ProtoShardingStruct) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProtoShardingStruct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ProtoShardingStruct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtoShardingStruct.Merge(m, src)
}
func (m *ProtoShardingStruct) XXX_Size() int {
	return m.Size()
}
func (m *ProtoShardingStruct) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtoShardingStruct.DiscardUnknown(m)
}

var xxx_messageInfo_ProtoShardingStruct proto.InternalMessageInfo

func (m *ProtoShardingStruct) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *ProtoShardingStruct) GetNumpeers() []uint32 {
	if m != nil {
		return m.Numpeers
	}
	return nil
}

type ProtoBlockListing struct {
	Error                *string                        `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Maxpages             *int32                         `protobuf:"varint,2,opt,name=maxpages" json:"maxpages,omitempty"`
	Data                 []*ProtoBlockListing_BlockData `protobuf:"bytes,3,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ProtoBlockListing) Reset()         { *m = ProtoBlockListing{} }
func (m *ProtoBlockListing) String() string { return proto.CompactTextString(m) }
func (*ProtoBlockListing) ProtoMessage()    {}
func (*ProtoBlockListing) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d90f80a2195a67f, []int{7}
}
func (m *ProtoBlockListing) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProtoBlockListing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ProtoBlockListing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtoBlockListing.Merge(m, src)
}
func (m *ProtoBlockListing) XXX_Size() int {
	return m.Size()
}
func (m *ProtoBlockListing) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtoBlockListing.DiscardUnknown(m)
}

var xxx_messageInfo_ProtoBlockListing proto.InternalMessageInfo

func (m *ProtoBlockListing) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *ProtoBlockListing) GetMaxpages() int32 {
	if m != nil && m.Maxpages != nil {
		return *m.Maxpages
	}
	return 0
}

func (m *ProtoBlockListing) GetData() []*ProtoBlockListing_BlockData {
	if m != nil {
		return m.Data
	}
	return nil
}

type ProtoBlockListing_BlockData struct {
	Hash                 *string  `protobuf:"bytes,1,req,name=hash" json:"hash,omitempty"`
	Blocknum             *int32   `protobuf:"varint,2,req,name=blocknum" json:"blocknum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProtoBlockListing_BlockData) Reset()         { *m = ProtoBlockListing_BlockData{} }
func (m *ProtoBlockListing_BlockData) String() string { return proto.CompactTextString(m) }
func (*ProtoBlockListing_BlockData) ProtoMessage()    {}
func (*ProtoBlockListing_BlockData) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d90f80a2195a67f, []int{7, 0}
}
func (m *ProtoBlockListing_BlockData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProtoBlockListing_BlockData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ProtoBlockListing_BlockData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtoBlockListing_BlockData.Merge(m, src)
}
func (m *ProtoBlockListing_BlockData) XXX_Size() int {
	return m.Size()
}
func (m *ProtoBlockListing_BlockData) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtoBlockListing_BlockData.DiscardUnknown(m)
}

var xxx_messageInfo_ProtoBlockListing_BlockData proto.InternalMessageInfo

func (m *ProtoBlockListing_BlockData) GetHash() string {
	if m != nil && m.Hash != nil {
		return *m.Hash
	}
	return ""
}

func (m *ProtoBlockListing_BlockData) GetBlocknum() int32 {
	if m != nil && m.Blocknum != nil {
		return *m.Blocknum
	}
	return 0
}

type ProtoPage struct {
	Page                 *uint32  `protobuf:"varint,1,req,name=page" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProtoPage) Reset()         { *m = ProtoPage{} }
func (m *ProtoPage) String() string { return proto.CompactTextString(m) }
func (*ProtoPage) ProtoMessage()    {}
func (*ProtoPage) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d90f80a2195a67f, []int{8}
}
func (m *ProtoPage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProtoPage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ProtoPage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtoPage.Merge(m, src)
}
func (m *ProtoPage) XXX_Size() int {
	return m.Size()
}
func (m *ProtoPage) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtoPage.DiscardUnknown(m)
}

var xxx_messageInfo_ProtoPage proto.InternalMessageInfo

func (m *ProtoPage) GetPage() uint32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

type ProtoBlockChainInfo struct {
	Numpeers             *uint32              `protobuf:"varint,1,req,name=numpeers" json:"numpeers,omitempty"`
	Numtxblocks          *string              `protobuf:"bytes,2,req,name=numtxblocks" json:"numtxblocks,omitempty"`
	Numdsblocks          *string              `protobuf:"bytes,3,req,name=numdsblocks" json:"numdsblocks,omitempty"`
	Numtxns              *string              `protobuf:"bytes,4,req,name=numtxns" json:"numtxns,omitempty"`
	Txrate               *float64             `protobuf:"fixed64,5,req,name=txrate" json:"txrate,omitempty"`
	Txblockrate          *float64             `protobuf:"fixed64,6,req,name=txblockrate" json:"txblockrate,omitempty"`
	Dsblockrate          *float64             `protobuf:"fixed64,7,req,name=dsblockrate" json:"dsblockrate,omitempty"`
	Currentminiepoch     *uint64              `protobuf:"varint,8,req,name=currentminiepoch" json:"currentminiepoch,omitempty"`
	Currentdsepoch       *uint64              `protobuf:"varint,9,req,name=currentdsepoch" json:"currentdsepoch,omitempty"`
	Numtxnstxepoch       *uint32              `protobuf:"varint,10,req,name=numtxnstxepoch" json:"numtxnstxepoch,omitempty"`
	Numtxnsdsepoch       *string              `protobuf:"bytes,11,req,name=numtxnsdsepoch" json:"numtxnsdsepoch,omitempty"`
	Shardingstructure    *ProtoShardingStruct `protobuf:"bytes,12,req,name=shardingstructure" json:"shardingstructure,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ProtoBlockChainInfo) Reset()         { *m = ProtoBlockChainInfo{} }
func (m *ProtoBlockChainInfo) String() string { return proto.CompactTextString(m) }
func (*ProtoBlockChainInfo) ProtoMessage()    {}
func (*ProtoBlockChainInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d90f80a2195a67f, []int{9}
}
func (m *ProtoBlockChainInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProtoBlockChainInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ProtoBlockChainInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtoBlockChainInfo.Merge(m, src)
}
func (m *ProtoBlockChainInfo) XXX_Size() int {
	return m.Size()
}
func (m *ProtoBlockChainInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtoBlockChainInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ProtoBlockChainInfo proto.InternalMessageInfo

func (m *ProtoBlockChainInfo) GetNumpeers() uint32 {
	if m != nil && m.Numpeers != nil {
		return *m.Numpeers
	}
	return 0
}

func (m *ProtoBlockChainInfo) GetNumtxblocks() string {
	if m != nil && m.Numtxblocks != nil {
		return *m.Numtxblocks
	}
	return ""
}

func (m *ProtoBlockChainInfo) GetNumdsblocks() string {
	if m != nil && m.Numdsblocks != nil {
		return *m.Numdsblocks
	}
	return ""
}

func (m *ProtoBlockChainInfo) GetNumtxns() string {
	if m != nil && m.Numtxns != nil {
		return *m.Numtxns
	}
	return ""
}

func (m *ProtoBlockChainInfo) GetTxrate() float64 {
	if m != nil && m.Txrate != nil {
		return *m.Txrate
	}
	return 0
}

func (m *ProtoBlockChainInfo) GetTxblockrate() float64 {
	if m != nil && m.Txblockrate != nil {
		return *m.Txblockrate
	}
	return 0
}

func (m *ProtoBlockChainInfo) GetDsblockrate() float64 {
	if m != nil && m.Dsblockrate != nil {
		return *m.Dsblockrate
	}
	return 0
}

func (m *ProtoBlockChainInfo) GetCurrentminiepoch() uint64 {
	if m != nil && m.Currentminiepoch != nil {
		return *m.Currentminiepoch
	}
	return 0
}

func (m *ProtoBlockChainInfo) GetCurrentdsepoch() uint64 {
	if m != nil && m.Currentdsepoch != nil {
		return *m.Currentdsepoch
	}
	return 0
}

func (m *ProtoBlockChainInfo) GetNumtxnstxepoch() uint32 {
	if m != nil && m.Numtxnstxepoch != nil {
		return *m.Numtxnstxepoch
	}
	return 0
}

func (m *ProtoBlockChainInfo) GetNumtxnsdsepoch() string {
	if m != nil && m.Numtxnsdsepoch != nil {
		return *m.Numtxnsdsepoch
	}
	return ""
}

func (m *ProtoBlockChainInfo) GetShardingstructure() *ProtoShardingStruct {
	if m != nil {
		return m.Shardingstructure
	}
	return nil
}

func init() {
	proto.RegisterType((*ProtoTxId)(nil), "ZilliqaMessage.ProtoTxId")
	proto.RegisterType((*ProtoTxHash)(nil), "ZilliqaMessage.ProtoTxHash")
	proto.RegisterType((*ProtoTxHashes)(nil), "ZilliqaMessage.ProtoTxHashes")
	proto.RegisterType((*ProtoAddress)(nil), "ZilliqaMessage.ProtoAddress")
	proto.RegisterType((*ProtoBlockNum)(nil), "ZilliqaMessage.ProtoBlockNum")
	proto.RegisterType((*ProtoStorageInfo)(nil), "ZilliqaMessage.ProtoStorageInfo")
	proto.RegisterType((*ProtoShardingStruct)(nil), "ZilliqaMessage.ProtoShardingStruct")
	proto.RegisterType((*ProtoBlockListing)(nil), "ZilliqaMessage.ProtoBlockListing")
	proto.RegisterType((*ProtoBlockListing_BlockData)(nil), "ZilliqaMessage.ProtoBlockListing.BlockData")
	proto.RegisterType((*ProtoPage)(nil), "ZilliqaMessage.ProtoPage")
	proto.RegisterType((*ProtoBlockChainInfo)(nil), "ZilliqaMessage.ProtoBlockChainInfo")
}

func init() { proto.RegisterFile("ServerMessages.proto", fileDescriptor_1d90f80a2195a67f) }

var fileDescriptor_1d90f80a2195a67f = []byte{
	// 583 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x4f, 0x6f, 0xd4, 0x3c,
	0x10, 0xc6, 0xe5, 0xec, 0xb6, 0xdd, 0x78, 0xbb, 0x55, 0xeb, 0xb7, 0x7a, 0x15, 0x2d, 0x52, 0x88,
	0xc2, 0x1f, 0x45, 0x54, 0x6c, 0xa5, 0x5e, 0x38, 0x70, 0x40, 0x14, 0x24, 0xa8, 0x04, 0xa8, 0x64,
	0x39, 0x71, 0xc2, 0xbb, 0x71, 0x93, 0x88, 0x8d, 0xb3, 0xd8, 0x0e, 0xca, 0x47, 0xe2, 0x23, 0x70,
	0xe7, 0xc2, 0x91, 0x23, 0x47, 0x9a, 0x4f, 0xd0, 0x23, 0x47, 0xe4, 0xb1, 0x37, 0x64, 0xb7, 0xe5,
	0x36, 0xcf, 0xe3, 0xdf, 0x8c, 0xc7, 0xe3, 0xc1, 0x87, 0x53, 0x26, 0x3e, 0x33, 0xf1, 0x9a, 0x49,
	0x49, 0x53, 0x26, 0x27, 0x4b, 0x51, 0xaa, 0x92, 0xec, 0xbd, 0xcf, 0x17, 0x8b, 0xfc, 0x13, 0xb5,
	0xf6, 0xf8, 0x61, 0x9a, 0xab, 0xac, 0x9a, 0x4d, 0xe6, 0x65, 0x71, 0x9c, 0x96, 0x69, 0x79, 0x0c,
	0xd8, 0xac, 0xba, 0x00, 0x05, 0x02, 0x22, 0x93, 0x1e, 0xde, 0xc6, 0xee, 0xb9, 0x0e, 0xde, 0xd5,
	0x67, 0x09, 0x21, 0xb8, 0xaf, 0xea, 0x3c, 0xf1, 0x50, 0xe0, 0x44, 0x6e, 0x0c, 0x71, 0x78, 0x0f,
	0x0f, 0x2d, 0xf0, 0x92, 0xca, 0x8c, 0xfc, 0x8f, 0xb7, 0x55, 0x9d, 0x51, 0x99, 0x59, 0xc8, 0xaa,
	0xf0, 0x03, 0x1e, 0x75, 0x30, 0x26, 0x35, 0xc8, 0xab, 0x62, 0xc6, 0x04, 0x80, 0xfd, 0xd8, 0x2a,
	0xf2, 0x08, 0x0f, 0x4c, 0x0a, 0x93, 0x9e, 0x13, 0xf4, 0xa2, 0xe1, 0xc9, 0xad, 0xc9, 0xfa, 0x13,
	0x26, 0x9d, 0x42, 0x71, 0x0b, 0x87, 0x11, 0xde, 0x85, 0x83, 0xa7, 0x49, 0x22, 0x98, 0x94, 0xc4,
	0xc3, 0x3b, 0xd4, 0x84, 0xb6, 0x95, 0x95, 0x0c, 0x8f, 0x6c, 0x2f, 0xa7, 0x8b, 0x72, 0xfe, 0xf1,
	0x4d, 0x55, 0x90, 0x31, 0x1e, 0xcc, 0x74, 0xcc, 0xab, 0xc2, 0x76, 0xd3, 0xea, 0x90, 0xe0, 0x7d,
	0x80, 0xa7, 0xaa, 0x14, 0x34, 0x65, 0x67, 0xfc, 0xa2, 0x0c, 0x5f, 0xe0, 0xff, 0x8c, 0x97, 0x51,
	0x91, 0xe4, 0x3c, 0x9d, 0x2a, 0x51, 0xcd, 0x15, 0x39, 0xc4, 0x5b, 0x4c, 0x88, 0x52, 0xbf, 0x08,
	0x45, 0x6e, 0x6c, 0x84, 0x2e, 0xce, 0xab, 0x62, 0xc9, 0x98, 0x30, 0x0f, 0x1a, 0xc5, 0xad, 0x0e,
	0xbf, 0x21, 0x7c, 0xf0, 0xb7, 0x95, 0x57, 0xb9, 0x54, 0x39, 0x4f, 0xff, 0x5d, 0xa7, 0xa0, 0xf5,
	0x52, 0x7f, 0xad, 0xe7, 0x04, 0x28, 0xda, 0x8a, 0x5b, 0x4d, 0x9e, 0xe0, 0x7e, 0x42, 0x15, 0xf5,
	0x7a, 0x30, 0xb0, 0xa3, 0x1b, 0x07, 0xd6, 0xbd, 0x62, 0x02, 0xe2, 0x39, 0x55, 0x34, 0x86, 0xc4,
	0xf1, 0x63, 0xec, 0xb6, 0x96, 0xfe, 0xe6, 0xce, 0x0f, 0x42, 0xbc, 0x36, 0x22, 0x27, 0x70, 0xf4,
	0xed, 0xed, 0x88, 0x56, 0x3b, 0x72, 0x4e, 0x53, 0xa6, 0x93, 0x75, 0x4f, 0x90, 0x3c, 0x8a, 0x21,
	0x0e, 0x9b, 0x9e, 0x1d, 0x18, 0xdc, 0xf1, 0x2c, 0xa3, 0x39, 0xd7, 0x73, 0x5c, 0x1b, 0x8d, 0xe1,
	0x5b, 0x4d, 0x02, 0x3c, 0xe4, 0x55, 0xa1, 0x6a, 0xb8, 0x45, 0xc2, 0x9d, 0x6e, 0xdc, 0xb5, 0x2c,
	0x91, 0x48, 0x4b, 0xf4, 0x5a, 0x62, 0x65, 0xe9, 0x15, 0x80, 0x04, 0x2e, 0xbd, 0xbe, 0x59, 0x01,
	0x2b, 0xcd, 0x9a, 0x0a, 0xaa, 0x98, 0xb7, 0x15, 0x38, 0x11, 0x8a, 0xad, 0xd2, 0x35, 0x6d, 0x7d,
	0x38, 0xdc, 0x86, 0xc3, 0xae, 0xa5, 0x09, 0x5b, 0x1f, 0x88, 0x1d, 0x43, 0x74, 0x2c, 0xf2, 0x00,
	0xef, 0xcf, 0x2b, 0x21, 0x18, 0x57, 0x45, 0xce, 0x73, 0xb6, 0x2c, 0xe7, 0x99, 0x37, 0x80, 0xad,
	0xba, 0xe6, 0x93, 0xfb, 0x78, 0xcf, 0x7a, 0x89, 0x34, 0xa4, 0x0b, 0xe4, 0x86, 0xab, 0x39, 0xdb,
	0xba, 0xaa, 0x0d, 0x87, 0x61, 0x5e, 0x1b, 0x6e, 0x87, 0x5b, 0xd5, 0x1b, 0xc2, 0xc3, 0x37, 0x5c,
	0xf2, 0x16, 0x1f, 0x48, 0xbb, 0xbc, 0x12, 0x96, 0xb7, 0x12, 0xcc, 0xdb, 0x0d, 0x9c, 0x68, 0x78,
	0x72, 0xe7, 0xc6, 0xed, 0x59, 0x5f, 0xf5, 0xf8, 0x7a, 0xf6, 0xe9, 0xdd, 0xab, 0x4b, 0x1f, 0xfd,
	0xbe, 0xf4, 0xd1, 0x97, 0xc6, 0x47, 0x5f, 0x1b, 0x1f, 0x7d, 0x6f, 0x7c, 0xf4, 0xa3, 0xf1, 0xd1,
	0xcf, 0xc6, 0x47, 0xbf, 0x1a, 0x1f, 0x5d, 0x35, 0x3e, 0xfa, 0x13, 0x00, 0x00, 0xff, 0xff, 0x88,
	0x17, 0x34, 0x3f, 0xa5, 0x04, 0x00, 0x00,
}

func (this *ProtoTxId) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ProtoTxId)
	if !ok {
		that2, ok := that.(ProtoTxId)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Txid != nil && that1.Txid != nil {
		if *this.Txid != *that1.Txid {
			return false
		}
	} else if this.Txid != nil {
		return false
	} else if that1.Txid != nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ProtoTxHash) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ProtoTxHash)
	if !ok {
		that2, ok := that.(ProtoTxHash)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Txhash != nil && that1.Txhash != nil {
		if *this.Txhash != *that1.Txhash {
			return false
		}
	} else if this.Txhash != nil {
		return false
	} else if that1.Txhash != nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ProtoTxHashes) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ProtoTxHashes)
	if !ok {
		that2, ok := that.(ProtoTxHashes)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Number != nil && that1.Number != nil {
		if *this.Number != *that1.Number {
			return false
		}
	} else if this.Number != nil {
		return false
	} else if that1.Number != nil {
		return false
	}
	if len(this.Txhashes) != len(that1.Txhashes) {
		return false
	}
	for i := range this.Txhashes {
		if !this.Txhashes[i].Equal(that1.Txhashes[i]) {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ProtoAddress) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ProtoAddress)
	if !ok {
		that2, ok := that.(ProtoAddress)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Address != nil && that1.Address != nil {
		if *this.Address != *that1.Address {
			return false
		}
	} else if this.Address != nil {
		return false
	} else if that1.Address != nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ProtoBlockNum) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ProtoBlockNum)
	if !ok {
		that2, ok := that.(ProtoBlockNum)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Blocknum != nil && that1.Blocknum != nil {
		if *this.Blocknum != *that1.Blocknum {
			return false
		}
	} else if this.Blocknum != nil {
		return false
	} else if that1.Blocknum != nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ProtoStorageInfo) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ProtoStorageInfo)
	if !ok {
		that2, ok := that.(ProtoStorageInfo)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ProtoShardingStruct) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ProtoShardingStruct)
	if !ok {
		that2, ok := that.(ProtoShardingStruct)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Error != nil && that1.Error != nil {
		if *this.Error != *that1.Error {
			return false
		}
	} else if this.Error != nil {
		return false
	} else if that1.Error != nil {
		return false
	}
	if len(this.Numpeers) != len(that1.Numpeers) {
		return false
	}
	for i := range this.Numpeers {
		if this.Numpeers[i] != that1.Numpeers[i] {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ProtoBlockListing) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ProtoBlockListing)
	if !ok {
		that2, ok := that.(ProtoBlockListing)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Error != nil && that1.Error != nil {
		if *this.Error != *that1.Error {
			return false
		}
	} else if this.Error != nil {
		return false
	} else if that1.Error != nil {
		return false
	}
	if this.Maxpages != nil && that1.Maxpages != nil {
		if *this.Maxpages != *that1.Maxpages {
			return false
		}
	} else if this.Maxpages != nil {
		return false
	} else if that1.Maxpages != nil {
		return false
	}
	if len(this.Data) != len(that1.Data) {
		return false
	}
	for i := range this.Data {
		if !this.Data[i].Equal(that1.Data[i]) {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ProtoBlockListing_BlockData) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ProtoBlockListing_BlockData)
	if !ok {
		that2, ok := that.(ProtoBlockListing_BlockData)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Hash != nil && that1.Hash != nil {
		if *this.Hash != *that1.Hash {
			return false
		}
	} else if this.Hash != nil {
		return false
	} else if that1.Hash != nil {
		return false
	}
	if this.Blocknum != nil && that1.Blocknum != nil {
		if *this.Blocknum != *that1.Blocknum {
			return false
		}
	} else if this.Blocknum != nil {
		return false
	} else if that1.Blocknum != nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ProtoPage) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ProtoPage)
	if !ok {
		that2, ok := that.(ProtoPage)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Page != nil && that1.Page != nil {
		if *this.Page != *that1.Page {
			return false
		}
	} else if this.Page != nil {
		return false
	} else if that1.Page != nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ProtoBlockChainInfo) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ProtoBlockChainInfo)
	if !ok {
		that2, ok := that.(ProtoBlockChainInfo)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Numpeers != nil && that1.Numpeers != nil {
		if *this.Numpeers != *that1.Numpeers {
			return false
		}
	} else if this.Numpeers != nil {
		return false
	} else if that1.Numpeers != nil {
		return false
	}
	if this.Numtxblocks != nil && that1.Numtxblocks != nil {
		if *this.Numtxblocks != *that1.Numtxblocks {
			return false
		}
	} else if this.Numtxblocks != nil {
		return false
	} else if that1.Numtxblocks != nil {
		return false
	}
	if this.Numdsblocks != nil && that1.Numdsblocks != nil {
		if *this.Numdsblocks != *that1.Numdsblocks {
			return false
		}
	} else if this.Numdsblocks != nil {
		return false
	} else if that1.Numdsblocks != nil {
		return false
	}
	if this.Numtxns != nil && that1.Numtxns != nil {
		if *this.Numtxns != *that1.Numtxns {
			return false
		}
	} else if this.Numtxns != nil {
		return false
	} else if that1.Numtxns != nil {
		return false
	}
	if this.Txrate != nil && that1.Txrate != nil {
		if *this.Txrate != *that1.Txrate {
			return false
		}
	} else if this.Txrate != nil {
		return false
	} else if that1.Txrate != nil {
		return false
	}
	if this.Txblockrate != nil && that1.Txblockrate != nil {
		if *this.Txblockrate != *that1.Txblockrate {
			return false
		}
	} else if this.Txblockrate != nil {
		return false
	} else if that1.Txblockrate != nil {
		return false
	}
	if this.Dsblockrate != nil && that1.Dsblockrate != nil {
		if *this.Dsblockrate != *that1.Dsblockrate {
			return false
		}
	} else if this.Dsblockrate != nil {
		return false
	} else if that1.Dsblockrate != nil {
		return false
	}
	if this.Currentminiepoch != nil && that1.Currentminiepoch != nil {
		if *this.Currentminiepoch != *that1.Currentminiepoch {
			return false
		}
	} else if this.Currentminiepoch != nil {
		return false
	} else if that1.Currentminiepoch != nil {
		return false
	}
	if this.Currentdsepoch != nil && that1.Currentdsepoch != nil {
		if *this.Currentdsepoch != *that1.Currentdsepoch {
			return false
		}
	} else if this.Currentdsepoch != nil {
		return false
	} else if that1.Currentdsepoch != nil {
		return false
	}
	if this.Numtxnstxepoch != nil && that1.Numtxnstxepoch != nil {
		if *this.Numtxnstxepoch != *that1.Numtxnstxepoch {
			return false
		}
	} else if this.Numtxnstxepoch != nil {
		return false
	} else if that1.Numtxnstxepoch != nil {
		return false
	}
	if this.Numtxnsdsepoch != nil && that1.Numtxnsdsepoch != nil {
		if *this.Numtxnsdsepoch != *that1.Numtxnsdsepoch {
			return false
		}
	} else if this.Numtxnsdsepoch != nil {
		return false
	} else if that1.Numtxnsdsepoch != nil {
		return false
	}
	if !this.Shardingstructure.Equal(that1.Shardingstructure) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ProtoTxId) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&ZilliqaMessage.ProtoTxId{")
	if this.Txid != nil {
		s = append(s, "Txid: "+valueToGoStringServerMessages(this.Txid, "string")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ProtoTxHash) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&ZilliqaMessage.ProtoTxHash{")
	if this.Txhash != nil {
		s = append(s, "Txhash: "+valueToGoStringServerMessages(this.Txhash, "string")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ProtoTxHashes) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&ZilliqaMessage.ProtoTxHashes{")
	if this.Number != nil {
		s = append(s, "Number: "+valueToGoStringServerMessages(this.Number, "uint64")+",\n")
	}
	if this.Txhashes != nil {
		s = append(s, "Txhashes: "+fmt.Sprintf("%#v", this.Txhashes)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ProtoAddress) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&ZilliqaMessage.ProtoAddress{")
	if this.Address != nil {
		s = append(s, "Address: "+valueToGoStringServerMessages(this.Address, "string")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ProtoBlockNum) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&ZilliqaMessage.ProtoBlockNum{")
	if this.Blocknum != nil {
		s = append(s, "Blocknum: "+valueToGoStringServerMessages(this.Blocknum, "uint64")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ProtoStorageInfo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&ZilliqaMessage.ProtoStorageInfo{")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ProtoShardingStruct) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&ZilliqaMessage.ProtoShardingStruct{")
	if this.Error != nil {
		s = append(s, "Error: "+valueToGoStringServerMessages(this.Error, "string")+",\n")
	}
	if this.Numpeers != nil {
		s = append(s, "Numpeers: "+fmt.Sprintf("%#v", this.Numpeers)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ProtoBlockListing) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&ZilliqaMessage.ProtoBlockListing{")
	if this.Error != nil {
		s = append(s, "Error: "+valueToGoStringServerMessages(this.Error, "string")+",\n")
	}
	if this.Maxpages != nil {
		s = append(s, "Maxpages: "+valueToGoStringServerMessages(this.Maxpages, "int32")+",\n")
	}
	if this.Data != nil {
		s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ProtoBlockListing_BlockData) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&ZilliqaMessage.ProtoBlockListing_BlockData{")
	if this.Hash != nil {
		s = append(s, "Hash: "+valueToGoStringServerMessages(this.Hash, "string")+",\n")
	}
	if this.Blocknum != nil {
		s = append(s, "Blocknum: "+valueToGoStringServerMessages(this.Blocknum, "int32")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ProtoPage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&ZilliqaMessage.ProtoPage{")
	if this.Page != nil {
		s = append(s, "Page: "+valueToGoStringServerMessages(this.Page, "uint32")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ProtoBlockChainInfo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 16)
	s = append(s, "&ZilliqaMessage.ProtoBlockChainInfo{")
	if this.Numpeers != nil {
		s = append(s, "Numpeers: "+valueToGoStringServerMessages(this.Numpeers, "uint32")+",\n")
	}
	if this.Numtxblocks != nil {
		s = append(s, "Numtxblocks: "+valueToGoStringServerMessages(this.Numtxblocks, "string")+",\n")
	}
	if this.Numdsblocks != nil {
		s = append(s, "Numdsblocks: "+valueToGoStringServerMessages(this.Numdsblocks, "string")+",\n")
	}
	if this.Numtxns != nil {
		s = append(s, "Numtxns: "+valueToGoStringServerMessages(this.Numtxns, "string")+",\n")
	}
	if this.Txrate != nil {
		s = append(s, "Txrate: "+valueToGoStringServerMessages(this.Txrate, "float64")+",\n")
	}
	if this.Txblockrate != nil {
		s = append(s, "Txblockrate: "+valueToGoStringServerMessages(this.Txblockrate, "float64")+",\n")
	}
	if this.Dsblockrate != nil {
		s = append(s, "Dsblockrate: "+valueToGoStringServerMessages(this.Dsblockrate, "float64")+",\n")
	}
	if this.Currentminiepoch != nil {
		s = append(s, "Currentminiepoch: "+valueToGoStringServerMessages(this.Currentminiepoch, "uint64")+",\n")
	}
	if this.Currentdsepoch != nil {
		s = append(s, "Currentdsepoch: "+valueToGoStringServerMessages(this.Currentdsepoch, "uint64")+",\n")
	}
	if this.Numtxnstxepoch != nil {
		s = append(s, "Numtxnstxepoch: "+valueToGoStringServerMessages(this.Numtxnstxepoch, "uint32")+",\n")
	}
	if this.Numtxnsdsepoch != nil {
		s = append(s, "Numtxnsdsepoch: "+valueToGoStringServerMessages(this.Numtxnsdsepoch, "string")+",\n")
	}
	if this.Shardingstructure != nil {
		s = append(s, "Shardingstructure: "+fmt.Sprintf("%#v", this.Shardingstructure)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringServerMessages(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *ProtoTxId) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProtoTxId) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProtoTxId) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Txid == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("txid")
	} else {
		i -= len(*m.Txid)
		copy(dAtA[i:], *m.Txid)
		i = encodeVarintServerMessages(dAtA, i, uint64(len(*m.Txid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProtoTxHash) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProtoTxHash) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProtoTxHash) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Txhash == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("txhash")
	} else {
		i -= len(*m.Txhash)
		copy(dAtA[i:], *m.Txhash)
		i = encodeVarintServerMessages(dAtA, i, uint64(len(*m.Txhash)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProtoTxHashes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProtoTxHashes) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProtoTxHashes) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Txhashes) > 0 {
		for iNdEx := len(m.Txhashes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Txhashes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintServerMessages(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Number == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("number")
	} else {
		i = encodeVarintServerMessages(dAtA, i, uint64(*m.Number))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ProtoAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProtoAddress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProtoAddress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Address == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("address")
	} else {
		i -= len(*m.Address)
		copy(dAtA[i:], *m.Address)
		i = encodeVarintServerMessages(dAtA, i, uint64(len(*m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProtoBlockNum) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProtoBlockNum) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProtoBlockNum) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Blocknum == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("blocknum")
	} else {
		i = encodeVarintServerMessages(dAtA, i, uint64(*m.Blocknum))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ProtoStorageInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProtoStorageInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProtoStorageInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ProtoShardingStruct) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProtoShardingStruct) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProtoShardingStruct) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Numpeers) > 0 {
		for iNdEx := len(m.Numpeers) - 1; iNdEx >= 0; iNdEx-- {
			i = encodeVarintServerMessages(dAtA, i, uint64(m.Numpeers[iNdEx]))
			i--
			dAtA[i] = 0x10
		}
	}
	if m.Error != nil {
		i -= len(*m.Error)
		copy(dAtA[i:], *m.Error)
		i = encodeVarintServerMessages(dAtA, i, uint64(len(*m.Error)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProtoBlockListing) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProtoBlockListing) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProtoBlockListing) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Data) > 0 {
		for iNdEx := len(m.Data) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Data[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintServerMessages(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Maxpages != nil {
		i = encodeVarintServerMessages(dAtA, i, uint64(*m.Maxpages))
		i--
		dAtA[i] = 0x10
	}
	if m.Error != nil {
		i -= len(*m.Error)
		copy(dAtA[i:], *m.Error)
		i = encodeVarintServerMessages(dAtA, i, uint64(len(*m.Error)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProtoBlockListing_BlockData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProtoBlockListing_BlockData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProtoBlockListing_BlockData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Blocknum == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("blocknum")
	} else {
		i = encodeVarintServerMessages(dAtA, i, uint64(*m.Blocknum))
		i--
		dAtA[i] = 0x10
	}
	if m.Hash == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("hash")
	} else {
		i -= len(*m.Hash)
		copy(dAtA[i:], *m.Hash)
		i = encodeVarintServerMessages(dAtA, i, uint64(len(*m.Hash)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProtoPage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProtoPage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProtoPage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Page == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("page")
	} else {
		i = encodeVarintServerMessages(dAtA, i, uint64(*m.Page))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ProtoBlockChainInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProtoBlockChainInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProtoBlockChainInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Shardingstructure == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("shardingstructure")
	} else {
		{
			size, err := m.Shardingstructure.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintServerMessages(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	if m.Numtxnsdsepoch == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("numtxnsdsepoch")
	} else {
		i -= len(*m.Numtxnsdsepoch)
		copy(dAtA[i:], *m.Numtxnsdsepoch)
		i = encodeVarintServerMessages(dAtA, i, uint64(len(*m.Numtxnsdsepoch)))
		i--
		dAtA[i] = 0x5a
	}
	if m.Numtxnstxepoch == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("numtxnstxepoch")
	} else {
		i = encodeVarintServerMessages(dAtA, i, uint64(*m.Numtxnstxepoch))
		i--
		dAtA[i] = 0x50
	}
	if m.Currentdsepoch == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("currentdsepoch")
	} else {
		i = encodeVarintServerMessages(dAtA, i, uint64(*m.Currentdsepoch))
		i--
		dAtA[i] = 0x48
	}
	if m.Currentminiepoch == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("currentminiepoch")
	} else {
		i = encodeVarintServerMessages(dAtA, i, uint64(*m.Currentminiepoch))
		i--
		dAtA[i] = 0x40
	}
	if m.Dsblockrate == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("dsblockrate")
	} else {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(*m.Dsblockrate))))
		i--
		dAtA[i] = 0x39
	}
	if m.Txblockrate == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("txblockrate")
	} else {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(*m.Txblockrate))))
		i--
		dAtA[i] = 0x31
	}
	if m.Txrate == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("txrate")
	} else {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(*m.Txrate))))
		i--
		dAtA[i] = 0x29
	}
	if m.Numtxns == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("numtxns")
	} else {
		i -= len(*m.Numtxns)
		copy(dAtA[i:], *m.Numtxns)
		i = encodeVarintServerMessages(dAtA, i, uint64(len(*m.Numtxns)))
		i--
		dAtA[i] = 0x22
	}
	if m.Numdsblocks == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("numdsblocks")
	} else {
		i -= len(*m.Numdsblocks)
		copy(dAtA[i:], *m.Numdsblocks)
		i = encodeVarintServerMessages(dAtA, i, uint64(len(*m.Numdsblocks)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Numtxblocks == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("numtxblocks")
	} else {
		i -= len(*m.Numtxblocks)
		copy(dAtA[i:], *m.Numtxblocks)
		i = encodeVarintServerMessages(dAtA, i, uint64(len(*m.Numtxblocks)))
		i--
		dAtA[i] = 0x12
	}
	if m.Numpeers == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("numpeers")
	} else {
		i = encodeVarintServerMessages(dAtA, i, uint64(*m.Numpeers))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintServerMessages(dAtA []byte, offset int, v uint64) int {
	offset -= sovServerMessages(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func NewPopulatedProtoTxId(r randyServerMessages, easy bool) *ProtoTxId {
	this := &ProtoTxId{}
	v1 := string(randStringServerMessages(r))
	this.Txid = &v1
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerMessages(r, 2)
	}
	return this
}

func NewPopulatedProtoTxHash(r randyServerMessages, easy bool) *ProtoTxHash {
	this := &ProtoTxHash{}
	v2 := string(randStringServerMessages(r))
	this.Txhash = &v2
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerMessages(r, 2)
	}
	return this
}

func NewPopulatedProtoTxHashes(r randyServerMessages, easy bool) *ProtoTxHashes {
	this := &ProtoTxHashes{}
	v3 := uint64(uint64(r.Uint32()))
	this.Number = &v3
	if r.Intn(5) != 0 {
		v4 := r.Intn(5)
		this.Txhashes = make([]*ProtoTxHash, v4)
		for i := 0; i < v4; i++ {
			this.Txhashes[i] = NewPopulatedProtoTxHash(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerMessages(r, 3)
	}
	return this
}

func NewPopulatedProtoAddress(r randyServerMessages, easy bool) *ProtoAddress {
	this := &ProtoAddress{}
	v5 := string(randStringServerMessages(r))
	this.Address = &v5
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerMessages(r, 2)
	}
	return this
}

func NewPopulatedProtoBlockNum(r randyServerMessages, easy bool) *ProtoBlockNum {
	this := &ProtoBlockNum{}
	v6 := uint64(uint64(r.Uint32()))
	this.Blocknum = &v6
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerMessages(r, 2)
	}
	return this
}

func NewPopulatedProtoStorageInfo(r randyServerMessages, easy bool) *ProtoStorageInfo {
	this := &ProtoStorageInfo{}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerMessages(r, 1)
	}
	return this
}

func NewPopulatedProtoShardingStruct(r randyServerMessages, easy bool) *ProtoShardingStruct {
	this := &ProtoShardingStruct{}
	if r.Intn(5) != 0 {
		v7 := string(randStringServerMessages(r))
		this.Error = &v7
	}
	if r.Intn(5) != 0 {
		v8 := r.Intn(10)
		this.Numpeers = make([]uint32, v8)
		for i := 0; i < v8; i++ {
			this.Numpeers[i] = uint32(r.Uint32())
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerMessages(r, 3)
	}
	return this
}

func NewPopulatedProtoBlockListing(r randyServerMessages, easy bool) *ProtoBlockListing {
	this := &ProtoBlockListing{}
	if r.Intn(5) != 0 {
		v9 := string(randStringServerMessages(r))
		this.Error = &v9
	}
	if r.Intn(5) != 0 {
		v10 := int32(r.Int31())
		if r.Intn(2) == 0 {
			v10 *= -1
		}
		this.Maxpages = &v10
	}
	if r.Intn(5) != 0 {
		v11 := r.Intn(5)
		this.Data = make([]*ProtoBlockListing_BlockData, v11)
		for i := 0; i < v11; i++ {
			this.Data[i] = NewPopulatedProtoBlockListing_BlockData(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerMessages(r, 4)
	}
	return this
}

func NewPopulatedProtoBlockListing_BlockData(r randyServerMessages, easy bool) *ProtoBlockListing_BlockData {
	this := &ProtoBlockListing_BlockData{}
	v12 := string(randStringServerMessages(r))
	this.Hash = &v12
	v13 := int32(r.Int31())
	if r.Intn(2) == 0 {
		v13 *= -1
	}
	this.Blocknum = &v13
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerMessages(r, 3)
	}
	return this
}

func NewPopulatedProtoPage(r randyServerMessages, easy bool) *ProtoPage {
	this := &ProtoPage{}
	v14 := uint32(r.Uint32())
	this.Page = &v14
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerMessages(r, 2)
	}
	return this
}

func NewPopulatedProtoBlockChainInfo(r randyServerMessages, easy bool) *ProtoBlockChainInfo {
	this := &ProtoBlockChainInfo{}
	v15 := uint32(r.Uint32())
	this.Numpeers = &v15
	v16 := string(randStringServerMessages(r))
	this.Numtxblocks = &v16
	v17 := string(randStringServerMessages(r))
	this.Numdsblocks = &v17
	v18 := string(randStringServerMessages(r))
	this.Numtxns = &v18
	v19 := float64(r.Float64())
	if r.Intn(2) == 0 {
		v19 *= -1
	}
	this.Txrate = &v19
	v20 := float64(r.Float64())
	if r.Intn(2) == 0 {
		v20 *= -1
	}
	this.Txblockrate = &v20
	v21 := float64(r.Float64())
	if r.Intn(2) == 0 {
		v21 *= -1
	}
	this.Dsblockrate = &v21
	v22 := uint64(uint64(r.Uint32()))
	this.Currentminiepoch = &v22
	v23 := uint64(uint64(r.Uint32()))
	this.Currentdsepoch = &v23
	v24 := uint32(r.Uint32())
	this.Numtxnstxepoch = &v24
	v25 := string(randStringServerMessages(r))
	this.Numtxnsdsepoch = &v25
	this.Shardingstructure = NewPopulatedProtoShardingStruct(r, easy)
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerMessages(r, 13)
	}
	return this
}

type randyServerMessages interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneServerMessages(r randyServerMessages) rune {
	ru := r.Intn(62)
	if ru < 10 {
		return rune(ru + 48)
	} else if ru < 36 {
		return rune(ru + 55)
	}
	return rune(ru + 61)
}
func randStringServerMessages(r randyServerMessages) string {
	v26 := r.Intn(100)
	tmps := make([]rune, v26)
	for i := 0; i < v26; i++ {
		tmps[i] = randUTF8RuneServerMessages(r)
	}
	return string(tmps)
}
func randUnrecognizedServerMessages(r randyServerMessages, maxFieldNumber int) (dAtA []byte) {
	l := r.Intn(5)
	for i := 0; i < l; i++ {
		wire := r.Intn(4)
		if wire == 3 {
			wire = 5
		}
		fieldNumber := maxFieldNumber + r.Intn(100)
		dAtA = randFieldServerMessages(dAtA, r, fieldNumber, wire)
	}
	return dAtA
}
func randFieldServerMessages(dAtA []byte, r randyServerMessages, fieldNumber int, wire int) []byte {
	key := uint32(fieldNumber)<<3 | uint32(wire)
	switch wire {
	case 0:
		dAtA = encodeVarintPopulateServerMessages(dAtA, uint64(key))
		v27 := r.Int63()
		if r.Intn(2) == 0 {
			v27 *= -1
		}
		dAtA = encodeVarintPopulateServerMessages(dAtA, uint64(v27))
	case 1:
		dAtA = encodeVarintPopulateServerMessages(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	case 2:
		dAtA = encodeVarintPopulateServerMessages(dAtA, uint64(key))
		ll := r.Intn(100)
		dAtA = encodeVarintPopulateServerMessages(dAtA, uint64(ll))
		for j := 0; j < ll; j++ {
			dAtA = append(dAtA, byte(r.Intn(256)))
		}
	default:
		dAtA = encodeVarintPopulateServerMessages(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	}
	return dAtA
}
func encodeVarintPopulateServerMessages(dAtA []byte, v uint64) []byte {
	for v >= 1<<7 {
		dAtA = append(dAtA, uint8(uint64(v)&0x7f|0x80))
		v >>= 7
	}
	dAtA = append(dAtA, uint8(v))
	return dAtA
}
func (m *ProtoTxId) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Txid != nil {
		l = len(*m.Txid)
		n += 1 + l + sovServerMessages(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProtoTxHash) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Txhash != nil {
		l = len(*m.Txhash)
		n += 1 + l + sovServerMessages(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProtoTxHashes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Number != nil {
		n += 1 + sovServerMessages(uint64(*m.Number))
	}
	if len(m.Txhashes) > 0 {
		for _, e := range m.Txhashes {
			l = e.Size()
			n += 1 + l + sovServerMessages(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProtoAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Address != nil {
		l = len(*m.Address)
		n += 1 + l + sovServerMessages(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProtoBlockNum) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Blocknum != nil {
		n += 1 + sovServerMessages(uint64(*m.Blocknum))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProtoStorageInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProtoShardingStruct) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != nil {
		l = len(*m.Error)
		n += 1 + l + sovServerMessages(uint64(l))
	}
	if len(m.Numpeers) > 0 {
		for _, e := range m.Numpeers {
			n += 1 + sovServerMessages(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProtoBlockListing) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != nil {
		l = len(*m.Error)
		n += 1 + l + sovServerMessages(uint64(l))
	}
	if m.Maxpages != nil {
		n += 1 + sovServerMessages(uint64(*m.Maxpages))
	}
	if len(m.Data) > 0 {
		for _, e := range m.Data {
			l = e.Size()
			n += 1 + l + sovServerMessages(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProtoBlockListing_BlockData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Hash != nil {
		l = len(*m.Hash)
		n += 1 + l + sovServerMessages(uint64(l))
	}
	if m.Blocknum != nil {
		n += 1 + sovServerMessages(uint64(*m.Blocknum))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProtoPage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Page != nil {
		n += 1 + sovServerMessages(uint64(*m.Page))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProtoBlockChainInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Numpeers != nil {
		n += 1 + sovServerMessages(uint64(*m.Numpeers))
	}
	if m.Numtxblocks != nil {
		l = len(*m.Numtxblocks)
		n += 1 + l + sovServerMessages(uint64(l))
	}
	if m.Numdsblocks != nil {
		l = len(*m.Numdsblocks)
		n += 1 + l + sovServerMessages(uint64(l))
	}
	if m.Numtxns != nil {
		l = len(*m.Numtxns)
		n += 1 + l + sovServerMessages(uint64(l))
	}
	if m.Txrate != nil {
		n += 9
	}
	if m.Txblockrate != nil {
		n += 9
	}
	if m.Dsblockrate != nil {
		n += 9
	}
	if m.Currentminiepoch != nil {
		n += 1 + sovServerMessages(uint64(*m.Currentminiepoch))
	}
	if m.Currentdsepoch != nil {
		n += 1 + sovServerMessages(uint64(*m.Currentdsepoch))
	}
	if m.Numtxnstxepoch != nil {
		n += 1 + sovServerMessages(uint64(*m.Numtxnstxepoch))
	}
	if m.Numtxnsdsepoch != nil {
		l = len(*m.Numtxnsdsepoch)
		n += 1 + l + sovServerMessages(uint64(l))
	}
	if m.Shardingstructure != nil {
		l = m.Shardingstructure.Size()
		n += 1 + l + sovServerMessages(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovServerMessages(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozServerMessages(x uint64) (n int) {
	return sovServerMessages(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ProtoTxId) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProtoTxId: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProtoTxId: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Txid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Txid = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipServerMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerMessages
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("txid")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProtoTxHash) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProtoTxHash: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProtoTxHash: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Txhash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Txhash = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipServerMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerMessages
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("txhash")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProtoTxHashes) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProtoTxHashes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProtoTxHashes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Number", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Number = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Txhashes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServerMessages
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServerMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Txhashes = append(m.Txhashes, &ProtoTxHash{})
			if err := m.Txhashes[len(m.Txhashes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServerMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerMessages
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("number")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProtoAddress) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProtoAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProtoAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Address = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipServerMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerMessages
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("address")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProtoBlockNum) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProtoBlockNum: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProtoBlockNum: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Blocknum", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Blocknum = &v
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipServerMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerMessages
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("blocknum")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProtoStorageInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProtoStorageInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProtoStorageInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipServerMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerMessages
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProtoShardingStruct) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProtoShardingStruct: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProtoShardingStruct: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Error = &s
			iNdEx = postIndex
		case 2:
			if wireType == 0 {
				var v uint32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowServerMessages
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Numpeers = append(m.Numpeers, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowServerMessages
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthServerMessages
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthServerMessages
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Numpeers) == 0 {
					m.Numpeers = make([]uint32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowServerMessages
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Numpeers = append(m.Numpeers, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Numpeers", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipServerMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerMessages
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProtoBlockListing) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProtoBlockListing: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProtoBlockListing: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Error = &s
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Maxpages", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Maxpages = &v
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServerMessages
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServerMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data, &ProtoBlockListing_BlockData{})
			if err := m.Data[len(m.Data)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServerMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerMessages
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProtoBlockListing_BlockData) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BlockData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BlockData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Hash = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Blocknum", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Blocknum = &v
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipServerMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerMessages
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("hash")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("blocknum")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProtoPage) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProtoPage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProtoPage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Page = &v
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipServerMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerMessages
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("page")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProtoBlockChainInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProtoBlockChainInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProtoBlockChainInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Numpeers", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Numpeers = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Numtxblocks", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Numtxblocks = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Numdsblocks", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Numdsblocks = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Numtxns", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Numtxns = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Txrate", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			v2 := float64(math.Float64frombits(v))
			m.Txrate = &v2
			hasFields[0] |= uint64(0x00000010)
		case 6:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Txblockrate", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			v2 := float64(math.Float64frombits(v))
			m.Txblockrate = &v2
			hasFields[0] |= uint64(0x00000020)
		case 7:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dsblockrate", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			v2 := float64(math.Float64frombits(v))
			m.Dsblockrate = &v2
			hasFields[0] |= uint64(0x00000040)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Currentminiepoch", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Currentminiepoch = &v
			hasFields[0] |= uint64(0x00000080)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Currentdsepoch", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Currentdsepoch = &v
			hasFields[0] |= uint64(0x00000100)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Numtxnstxepoch", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Numtxnstxepoch = &v
			hasFields[0] |= uint64(0x00000200)
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Numtxnsdsepoch", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Numtxnsdsepoch = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000400)
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Shardingstructure", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServerMessages
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServerMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Shardingstructure == nil {
				m.Shardingstructure = &ProtoShardingStruct{}
			}
			if err := m.Shardingstructure.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000800)
		default:
			iNdEx = preIndex
			skippy, err := skipServerMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerMessages
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("numpeers")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("numtxblocks")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("numdsblocks")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("numtxns")
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("txrate")
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("txblockrate")
	}
	if hasFields[0]&uint64(0x00000040) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("dsblockrate")
	}
	if hasFields[0]&uint64(0x00000080) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("currentminiepoch")
	}
	if hasFields[0]&uint64(0x00000100) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("currentdsepoch")
	}
	if hasFields[0]&uint64(0x00000200) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("numtxnstxepoch")
	}
	if hasFields[0]&uint64(0x00000400) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("numtxnsdsepoch")
	}
	if hasFields[0]&uint64(0x00000800) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("shardingstructure")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipServerMessages(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowServerMessages
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowServerMessages
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthServerMessages
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupServerMessages
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthServerMessages
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthServerMessages        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowServerMessages          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupServerMessages = fmt.Errorf("proto: unexpected end of group")
)
