// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ServerRequest.proto

package ZilliqaMessage

import (
	bytes "bytes"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type GetStorageAtRequest struct {
	Address              *string  `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Position             *string  `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStorageAtRequest) Reset()         { *m = GetStorageAtRequest{} }
func (m *GetStorageAtRequest) String() string { return proto.CompactTextString(m) }
func (*GetStorageAtRequest) ProtoMessage()    {}
func (*GetStorageAtRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d840ebe0e40eff60, []int{0}
}
func (m *GetStorageAtRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetStorageAtRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GetStorageAtRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStorageAtRequest.Merge(m, src)
}
func (m *GetStorageAtRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetStorageAtRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStorageAtRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStorageAtRequest proto.InternalMessageInfo

func (m *GetStorageAtRequest) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *GetStorageAtRequest) GetPosition() string {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return ""
}

type GetBlockTransactionCountRequest struct {
	Blockhash            *string  `protobuf:"bytes,1,opt,name=blockhash" json:"blockhash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockTransactionCountRequest) Reset()         { *m = GetBlockTransactionCountRequest{} }
func (m *GetBlockTransactionCountRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockTransactionCountRequest) ProtoMessage()    {}
func (*GetBlockTransactionCountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d840ebe0e40eff60, []int{1}
}
func (m *GetBlockTransactionCountRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetBlockTransactionCountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GetBlockTransactionCountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockTransactionCountRequest.Merge(m, src)
}
func (m *GetBlockTransactionCountRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetBlockTransactionCountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockTransactionCountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockTransactionCountRequest proto.InternalMessageInfo

func (m *GetBlockTransactionCountRequest) GetBlockhash() string {
	if m != nil && m.Blockhash != nil {
		return *m.Blockhash
	}
	return ""
}

type CreateTransactionRequest struct {
	Tx                   *ProtoTransaction `protobuf:"bytes,1,req,name=tx" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateTransactionRequest) Reset()         { *m = CreateTransactionRequest{} }
func (m *CreateTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTransactionRequest) ProtoMessage()    {}
func (*CreateTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d840ebe0e40eff60, []int{2}
}
func (m *CreateTransactionRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *CreateTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTransactionRequest.Merge(m, src)
}
func (m *CreateTransactionRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTransactionRequest proto.InternalMessageInfo

func (m *CreateTransactionRequest) GetTx() *ProtoTransaction {
	if m != nil {
		return m.Tx
	}
	return nil
}

type GetTransactionRequest struct {
	Txhash               *string  `protobuf:"bytes,1,req,name=txhash" json:"txhash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionRequest) Reset()         { *m = GetTransactionRequest{} }
func (m *GetTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionRequest) ProtoMessage()    {}
func (*GetTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d840ebe0e40eff60, []int{3}
}
func (m *GetTransactionRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GetTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionRequest.Merge(m, src)
}
func (m *GetTransactionRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionRequest proto.InternalMessageInfo

func (m *GetTransactionRequest) GetTxhash() string {
	if m != nil && m.Txhash != nil {
		return *m.Txhash
	}
	return ""
}

func init() {
	proto.RegisterType((*GetStorageAtRequest)(nil), "ZilliqaMessage.GetStorageAtRequest")
	proto.RegisterType((*GetBlockTransactionCountRequest)(nil), "ZilliqaMessage.GetBlockTransactionCountRequest")
	proto.RegisterType((*CreateTransactionRequest)(nil), "ZilliqaMessage.CreateTransactionRequest")
	proto.RegisterType((*GetTransactionRequest)(nil), "ZilliqaMessage.GetTransactionRequest")
}

func init() { proto.RegisterFile("ServerRequest.proto", fileDescriptor_d840ebe0e40eff60) }

var fileDescriptor_d840ebe0e40eff60 = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0x31, 0x4e, 0xc3, 0x40,
	0x10, 0x45, 0x35, 0x2e, 0x80, 0x2c, 0x12, 0x45, 0x02, 0xc8, 0x8a, 0xd0, 0x12, 0x59, 0x14, 0x6e,
	0xb0, 0x11, 0x17, 0x40, 0x24, 0x85, 0x0b, 0x40, 0x42, 0x0e, 0x15, 0xdd, 0xda, 0x19, 0x6c, 0x0b,
	0xe3, 0x4d, 0x76, 0xc7, 0xc8, 0x47, 0xe2, 0x08, 0x1c, 0x81, 0x92, 0x92, 0x92, 0xec, 0x09, 0x52,
	0x52, 0x22, 0x3b, 0x4e, 0x08, 0x88, 0x6e, 0xdf, 0x9f, 0xf9, 0x7f, 0xe7, 0xb3, 0xde, 0x18, 0xd5,
	0x33, 0xaa, 0x10, 0x67, 0x25, 0x6a, 0xf2, 0xa6, 0x4a, 0x92, 0xec, 0xee, 0xdd, 0x67, 0x79, 0x9e,
	0xcd, 0xc4, 0x0d, 0x6a, 0x2d, 0x12, 0xec, 0xef, 0xff, 0xe6, 0xe5, 0x56, 0xff, 0x34, 0xc9, 0x28,
	0x2d, 0x23, 0x2f, 0x96, 0x4f, 0x7e, 0x22, 0x13, 0xe9, 0x37, 0x72, 0x54, 0x3e, 0x34, 0xd4, 0x40,
	0xf3, 0x5a, 0xae, 0x3b, 0x57, 0xac, 0x17, 0x20, 0x8d, 0x49, 0x2a, 0x91, 0xe0, 0x25, 0xb5, 0x3f,
	0x76, 0x6d, 0xb6, 0x2d, 0x26, 0x13, 0x85, 0x5a, 0xdb, 0x30, 0x00, 0xb7, 0x13, 0xae, 0xb0, 0xdb,
	0x67, 0x3b, 0x53, 0xa9, 0x33, 0xca, 0x64, 0x61, 0x5b, 0xcd, 0x68, 0xcd, 0xce, 0x05, 0x3b, 0x0e,
	0x90, 0x86, 0xb9, 0x8c, 0x1f, 0xef, 0x94, 0x28, 0xb4, 0x88, 0x6b, 0x79, 0x24, 0xcb, 0x62, 0x1d,
	0x7c, 0xc4, 0x3a, 0x51, 0x3d, 0x4f, 0x85, 0x4e, 0xdb, 0xe8, 0x1f, 0xc1, 0xb9, 0x66, 0xf6, 0x48,
	0xa1, 0x20, 0xdc, 0xb0, 0xaf, 0x9c, 0x67, 0xcc, 0xa2, 0xca, 0x86, 0x81, 0xe5, 0xee, 0x9e, 0x0f,
	0xbc, 0x3f, 0xdd, 0x6f, 0xeb, 0x32, 0x9b, 0x26, 0x8b, 0x2a, 0xc7, 0x67, 0x07, 0x01, 0xd2, 0x3f,
	0x51, 0x87, 0x6c, 0x8b, 0xaa, 0xf6, 0x02, 0xcb, 0xed, 0x84, 0x2d, 0x0d, 0x4f, 0x16, 0x73, 0x0e,
	0x5f, 0x73, 0x0e, 0x2f, 0x86, 0xc3, 0xab, 0xe1, 0xf0, 0x66, 0x38, 0xbc, 0x1b, 0x0e, 0x1f, 0x86,
	0xc3, 0xa7, 0xe1, 0xb0, 0x30, 0x1c, 0xbe, 0x03, 0x00, 0x00, 0xff, 0xff, 0x87, 0x0d, 0x04, 0x69,
	0x9d, 0x01, 0x00, 0x00,
}

func (this *GetStorageAtRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetStorageAtRequest)
	if !ok {
		that2, ok := that.(GetStorageAtRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Address != nil && that1.Address != nil {
		if *this.Address != *that1.Address {
			return false
		}
	} else if this.Address != nil {
		return false
	} else if that1.Address != nil {
		return false
	}
	if this.Position != nil && that1.Position != nil {
		if *this.Position != *that1.Position {
			return false
		}
	} else if this.Position != nil {
		return false
	} else if that1.Position != nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *GetBlockTransactionCountRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetBlockTransactionCountRequest)
	if !ok {
		that2, ok := that.(GetBlockTransactionCountRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Blockhash != nil && that1.Blockhash != nil {
		if *this.Blockhash != *that1.Blockhash {
			return false
		}
	} else if this.Blockhash != nil {
		return false
	} else if that1.Blockhash != nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *CreateTransactionRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateTransactionRequest)
	if !ok {
		that2, ok := that.(CreateTransactionRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Tx.Equal(that1.Tx) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *GetTransactionRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetTransactionRequest)
	if !ok {
		that2, ok := that.(GetTransactionRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Txhash != nil && that1.Txhash != nil {
		if *this.Txhash != *that1.Txhash {
			return false
		}
	} else if this.Txhash != nil {
		return false
	} else if that1.Txhash != nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *GetStorageAtRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&ZilliqaMessage.GetStorageAtRequest{")
	if this.Address != nil {
		s = append(s, "Address: "+valueToGoStringServerRequest(this.Address, "string")+",\n")
	}
	if this.Position != nil {
		s = append(s, "Position: "+valueToGoStringServerRequest(this.Position, "string")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetBlockTransactionCountRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&ZilliqaMessage.GetBlockTransactionCountRequest{")
	if this.Blockhash != nil {
		s = append(s, "Blockhash: "+valueToGoStringServerRequest(this.Blockhash, "string")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateTransactionRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&ZilliqaMessage.CreateTransactionRequest{")
	if this.Tx != nil {
		s = append(s, "Tx: "+fmt.Sprintf("%#v", this.Tx)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetTransactionRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&ZilliqaMessage.GetTransactionRequest{")
	if this.Txhash != nil {
		s = append(s, "Txhash: "+valueToGoStringServerRequest(this.Txhash, "string")+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringServerRequest(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *GetStorageAtRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetStorageAtRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetStorageAtRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Position != nil {
		i -= len(*m.Position)
		copy(dAtA[i:], *m.Position)
		i = encodeVarintServerRequest(dAtA, i, uint64(len(*m.Position)))
		i--
		dAtA[i] = 0x12
	}
	if m.Address != nil {
		i -= len(*m.Address)
		copy(dAtA[i:], *m.Address)
		i = encodeVarintServerRequest(dAtA, i, uint64(len(*m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetBlockTransactionCountRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetBlockTransactionCountRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetBlockTransactionCountRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Blockhash != nil {
		i -= len(*m.Blockhash)
		copy(dAtA[i:], *m.Blockhash)
		i = encodeVarintServerRequest(dAtA, i, uint64(len(*m.Blockhash)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateTransactionRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateTransactionRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateTransactionRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Tx == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("tx")
	} else {
		{
			size, err := m.Tx.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintServerRequest(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetTransactionRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetTransactionRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetTransactionRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Txhash == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("txhash")
	} else {
		i -= len(*m.Txhash)
		copy(dAtA[i:], *m.Txhash)
		i = encodeVarintServerRequest(dAtA, i, uint64(len(*m.Txhash)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintServerRequest(dAtA []byte, offset int, v uint64) int {
	offset -= sovServerRequest(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func NewPopulatedGetStorageAtRequest(r randyServerRequest, easy bool) *GetStorageAtRequest {
	this := &GetStorageAtRequest{}
	if r.Intn(5) != 0 {
		v1 := string(randStringServerRequest(r))
		this.Address = &v1
	}
	if r.Intn(5) != 0 {
		v2 := string(randStringServerRequest(r))
		this.Position = &v2
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerRequest(r, 3)
	}
	return this
}

func NewPopulatedGetBlockTransactionCountRequest(r randyServerRequest, easy bool) *GetBlockTransactionCountRequest {
	this := &GetBlockTransactionCountRequest{}
	if r.Intn(5) != 0 {
		v3 := string(randStringServerRequest(r))
		this.Blockhash = &v3
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerRequest(r, 2)
	}
	return this
}

func NewPopulatedCreateTransactionRequest(r randyServerRequest, easy bool) *CreateTransactionRequest {
	this := &CreateTransactionRequest{}
	this.Tx = NewPopulatedProtoTransaction(r, easy)
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerRequest(r, 2)
	}
	return this
}

func NewPopulatedGetTransactionRequest(r randyServerRequest, easy bool) *GetTransactionRequest {
	this := &GetTransactionRequest{}
	v4 := string(randStringServerRequest(r))
	this.Txhash = &v4
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedServerRequest(r, 2)
	}
	return this
}

type randyServerRequest interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneServerRequest(r randyServerRequest) rune {
	ru := r.Intn(62)
	if ru < 10 {
		return rune(ru + 48)
	} else if ru < 36 {
		return rune(ru + 55)
	}
	return rune(ru + 61)
}
func randStringServerRequest(r randyServerRequest) string {
	v5 := r.Intn(100)
	tmps := make([]rune, v5)
	for i := 0; i < v5; i++ {
		tmps[i] = randUTF8RuneServerRequest(r)
	}
	return string(tmps)
}
func randUnrecognizedServerRequest(r randyServerRequest, maxFieldNumber int) (dAtA []byte) {
	l := r.Intn(5)
	for i := 0; i < l; i++ {
		wire := r.Intn(4)
		if wire == 3 {
			wire = 5
		}
		fieldNumber := maxFieldNumber + r.Intn(100)
		dAtA = randFieldServerRequest(dAtA, r, fieldNumber, wire)
	}
	return dAtA
}
func randFieldServerRequest(dAtA []byte, r randyServerRequest, fieldNumber int, wire int) []byte {
	key := uint32(fieldNumber)<<3 | uint32(wire)
	switch wire {
	case 0:
		dAtA = encodeVarintPopulateServerRequest(dAtA, uint64(key))
		v6 := r.Int63()
		if r.Intn(2) == 0 {
			v6 *= -1
		}
		dAtA = encodeVarintPopulateServerRequest(dAtA, uint64(v6))
	case 1:
		dAtA = encodeVarintPopulateServerRequest(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	case 2:
		dAtA = encodeVarintPopulateServerRequest(dAtA, uint64(key))
		ll := r.Intn(100)
		dAtA = encodeVarintPopulateServerRequest(dAtA, uint64(ll))
		for j := 0; j < ll; j++ {
			dAtA = append(dAtA, byte(r.Intn(256)))
		}
	default:
		dAtA = encodeVarintPopulateServerRequest(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	}
	return dAtA
}
func encodeVarintPopulateServerRequest(dAtA []byte, v uint64) []byte {
	for v >= 1<<7 {
		dAtA = append(dAtA, uint8(uint64(v)&0x7f|0x80))
		v >>= 7
	}
	dAtA = append(dAtA, uint8(v))
	return dAtA
}
func (m *GetStorageAtRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Address != nil {
		l = len(*m.Address)
		n += 1 + l + sovServerRequest(uint64(l))
	}
	if m.Position != nil {
		l = len(*m.Position)
		n += 1 + l + sovServerRequest(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetBlockTransactionCountRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Blockhash != nil {
		l = len(*m.Blockhash)
		n += 1 + l + sovServerRequest(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateTransactionRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Tx != nil {
		l = m.Tx.Size()
		n += 1 + l + sovServerRequest(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetTransactionRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Txhash != nil {
		l = len(*m.Txhash)
		n += 1 + l + sovServerRequest(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovServerRequest(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozServerRequest(x uint64) (n int) {
	return sovServerRequest(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetStorageAtRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetStorageAtRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetStorageAtRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Address = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Position = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServerRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerRequest
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetBlockTransactionCountRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetBlockTransactionCountRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetBlockTransactionCountRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Blockhash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Blockhash = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServerRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerRequest
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateTransactionRequest) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateTransactionRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateTransactionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tx", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServerRequest
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServerRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Tx == nil {
				m.Tx = &ProtoTransaction{}
			}
			if err := m.Tx.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipServerRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerRequest
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("tx")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetTransactionRequest) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServerRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetTransactionRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetTransactionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Txhash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServerRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServerRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServerRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Txhash = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipServerRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServerRequest
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServerRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("txhash")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipServerRequest(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowServerRequest
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowServerRequest
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowServerRequest
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthServerRequest
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupServerRequest
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthServerRequest
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthServerRequest        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowServerRequest          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupServerRequest = fmt.Errorf("proto: unexpected end of group")
)
